{"ast":null,"code":"import _objectSpread from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\calendar\\\\EventEditor.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, IconButton, Button, Icon, Grid } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { addNewEvent, updateEvent, deleteEvent } from \"./CalendarService\";\n\nvar EventEditor = /*#__PURE__*/function (_Component) {\n  _inherits(EventEditor, _Component);\n\n  var _super = _createSuper(EventEditor);\n\n  function EventEditor() {\n    var _this;\n\n    _classCallCheck(this, EventEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      title: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      location: \"\",\n      note: \"\"\n    };\n\n    _this.handleChange = function (event) {\n      event.persist();\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n\n      if (id) {\n        updateEvent(_objectSpread({}, _this.state)).then(function () {\n          _this.props.handleOKClose();\n        });\n      } else {\n        addNewEvent(_objectSpread({}, _this.state)).then(function () {\n          _this.props.handleClose();\n\n          _this.props.handleOKClose();\n        });\n      }\n    };\n\n    _this.handleDeleteEvent = function () {\n      if (_this.state.id) {\n        deleteEvent(_this.state).then(function () {\n          _this.props.handleClose();\n        });\n      }\n    };\n\n    _this.handleDiaglogClose = function () {\n      _this.props.handleClose();\n    };\n\n    _this.handleDateChange = function (date, name) {\n      _this.setState({\n        [name]: date\n      });\n    };\n\n    _this.generateRandomId = function () {\n      var tempId = Math.random().toString();\n      var id = tempId.substr(2, tempId.length - 1);\n      return id;\n    };\n\n    return _this;\n  }\n\n  _createClass(EventEditor, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState(_objectSpread({}, this.props.event));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          title = _this$state.title,\n          startTime = _this$state.startTime,\n          endTime = _this$state.endTime,\n          location = _this$state.location,\n          note = _this$state.note,\n          chairman = _this$state.chairman;\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          handleOKClose = _this$props.handleOKClose,\n          event = _this$props.event,\n          t = _this$props.t;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"m-0 text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, \"Add Events\"), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, \"clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-24 w-100\",\n        label: \"Title\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: t(\"Calendar.Chairman\") //validators={[\"required\"]}\n        //errorMessages={[\"this field is required\"]}\n        ,\n        id: \"chairman\",\n        className: \"w-80 mb-16 mr-16\",\n        value: chairman != null ? chairman.name : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16\",\n        className: \"mb-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.setState({\n            shouldOpenSearchOrgTypeDialog: true,\n            item: {}\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, t('Select'))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DateTimePicker, {\n        margin: \"none\",\n        id: \"mui-pickers-date\",\n        label: \"Start date\",\n        inputVariant: \"standard\",\n        type: \"text\",\n        autoOk: true,\n        value: startTime,\n        onChange: function onChange(date) {\n          return _this2.handleDateChange(date, \"startTime\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DateTimePicker, {\n        margin: \"none\",\n        id: \"mui-pickers-date\",\n        label: \"End date\",\n        inputVariant: \"standard\",\n        type: \"text\",\n        autoOk: true,\n        value: endTime,\n        onChange: function onChange(date) {\n          return _this2.handleDateChange(date, \"endTime\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"py-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-24 w-100\",\n        label: \"Location\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"location\",\n        value: location,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-36 w-100\",\n        label: \"Note\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"note\",\n        value: note,\n        rowsMax: 2,\n        multiline: true,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleDiaglogClose,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, t('Cancel'))))));\n    }\n  }]);\n\n  return EventEditor;\n}(Component); //export default EventEditorDialog;\n\n\nexport { EventEditor as default };","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/calendar/EventEditor.jsx"],"names":["React","Component","Dialog","IconButton","Button","Icon","Grid","ValidatorForm","TextValidator","MuiPickersUtilsProvider","DateTimePicker","DateFnsUtils","addNewEvent","updateEvent","deleteEvent","EventEditor","state","title","startTime","endTime","location","note","handleChange","event","persist","setState","target","name","value","handleFormSubmit","id","then","props","handleOKClose","handleClose","handleDeleteEvent","handleDiaglogClose","handleDateChange","date","generateRandomId","tempId","Math","random","toString","substr","length","chairman","open","t","shouldOpenSearchOrgTypeDialog","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Dialog, IconButton, Button, Icon, Grid } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { addNewEvent, updateEvent, deleteEvent } from \"./CalendarService\";\n\nexport default class EventEditor extends Component {\n  state = {\n    title: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    location: \"\",\n    note: \"\"\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFormSubmit = () => {\n    let { id } = this.state;\n    if (id) {\n      updateEvent({\n        ...this.state\n      }).then(() => {\n        this.props.handleOKClose();\n      });\n    } else {\n      addNewEvent({\n        ...this.state\n      }).then(() => {\n        this.props.handleClose();\n        this.props.handleOKClose();\n      });\n    }\n  };\n\n  handleDeleteEvent = () => {\n    if (this.state.id) {\n      deleteEvent(this.state).then(() => {\n        this.props.handleClose();\n      });\n    }\n  };\n  handleDiaglogClose = () => {\n    this.props.handleClose();\n  };\n  handleDateChange = (date, name) => {\n    this.setState({\n      [name]: date\n    });\n  };\n\n  generateRandomId = () => {\n    let tempId = Math.random().toString();\n    let id = tempId.substr(2, tempId.length - 1);\n    return id;\n  };\n\n  componentWillMount() {\n    this.setState({\n      ...this.props.event\n    });\n  }\n\n  render() {\n    let { title, startTime, endTime, location, note,chairman } = this.state;\n    let { open, handleClose,handleOKClose,event,t } = this.props;\n\n    return (\n      <div>\n      <div className=\"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\">\n          <h4 className=\"m-0 text-white\">Add Events</h4>\n          <IconButton onClick={handleClose}>\n            <Icon className=\"text-white\">clear</Icon>\n          </IconButton>\n        </div>\n\n        <div className=\"p-24\">\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n            <TextValidator\n              className=\"mb-24 w-100\"\n              label=\"Title\"\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              validators={[\"required\"]}\n              errorMessages={[\"this field is required\"]}\n            />\n              <Grid item sm={12} xs={12}>\n                <TextValidator\n                  label={t(\"Calendar.Chairman\")}\n                  //validators={[\"required\"]}\n                  //errorMessages={[\"this field is required\"]}\n                  id=\"chairman\" className=\"w-80 mb-16 mr-16\" value={chairman != null ? chairman.name : ''} />\n                <Button\n                  className=\"mb-16\"\n                  className=\"mb-16 align-bottom\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => this.setState({ shouldOpenSearchOrgTypeDialog: true, item: {} })}\n                >\n                  {t('Select')}\n                </Button>\n              </Grid>\n            <Grid container spacing={4}>\n              <Grid item sm={6} xs={12}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DateTimePicker\n                    margin=\"none\"\n                    id=\"mui-pickers-date\"\n                    label=\"Start date\"\n                    inputVariant=\"standard\"\n                    type=\"text\"\n                    autoOk={true}\n                    value={startTime}\n                    onChange={date => this.handleDateChange(date, \"startTime\")}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DateTimePicker\n                    margin=\"none\"\n                    id=\"mui-pickers-date\"\n                    label=\"End date\"\n                    inputVariant=\"standard\"\n                    type=\"text\"\n                    autoOk={true}\n                    value={endTime}\n                    onChange={date => this.handleDateChange(date, \"endTime\")}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n            </Grid>\n            <div className=\"py-8\" />\n            <TextValidator\n              className=\"mb-24 w-100\"\n              label=\"Location\"\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"location\"\n              value={location}\n              validators={[\"required\"]}\n              errorMessages={[\"this field is required\"]}\n            />\n\n            <TextValidator\n              className=\"mb-36 w-100\"\n              label=\"Note\"\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"note\"\n              value={note}\n              rowsMax={2}\n              multiline={true}\n              validators={[\"required\"]}\n              errorMessages={[\"this field is required\"]}\n            />\n\n            <div className=\"flex flex-space-between flex-middle\">\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save\n              </Button>\n              <Button onClick={this.handleDiaglogClose} variant=\"contained\" color=\"primary\" type=\"button\">\n                {t('Cancel')}\n              </Button>\n            </div>\n          </ValidatorForm>\n        </div>  \n      </div>\n    );\n  }\n}\n\n//export default EventEditorDialog;\n"]},"metadata":{},"sourceType":"module"}