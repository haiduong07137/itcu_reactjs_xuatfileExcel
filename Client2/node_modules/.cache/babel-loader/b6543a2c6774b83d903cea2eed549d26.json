{"ast":null,"code":"import _objectSpread from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\CommonObjectType\\\\CommonObjectTypeDialog.jsx\";\nimport { Grid, MuiThemeProvider, DialogActions, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Radio, Dialog } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { getByPage, saveItem, checkCode } from \"./CommonObjectTypeService\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport NotificationPopup from '../Component/NotificationPopup/NotificationPopup';\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar CommonObjectTypeDialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(CommonObjectTypeDialog, _React$Component);\n\n  var _super = _createSuper(CommonObjectTypeDialog);\n\n  function CommonObjectTypeDialog(props) {\n    var _this;\n\n    _classCallCheck(this, CommonObjectTypeDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 5,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectedItem: {},\n      keyword: '',\n      shouldOpenNotificationPopup: false,\n      Notification: \"\"\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.pageIndex = _this.state.page;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      getByPage(searchObject).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleClick = function (event, item) {\n      //alert(item);\n      if (item.id != null) {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: item\n        });\n      } else {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: null\n        });\n      }\n    };\n\n    _this.search = function (keyword) {\n      var searchObject = {};\n      searchObject.text = keyword;\n      searchObject.pageIndex = _this.state.page;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      getByPage(searchObject).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleChangeName = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleChangeCode = function (event) {\n      _this.setState({\n        code: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var code = _this.state.code;\n      checkCode(id, code).then(function (result) {\n        //Nếu trả về true là code đã được sử dụng\n        if (result.data) {\n          _this.setState({\n            shouldOpenNotificationPopup: true,\n            Notification: \"CommonObjectType.noti.dupli_code\"\n          }); // alert(\"Code đã được sử dụng\");\n\n        } else {\n          saveItem(_objectSpread({}, _this.state)).then(function () {\n            _this.props.handleClose();\n          });\n        }\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenNotificationPopup: false\n      });\n    };\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CommonObjectTypeDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.updatePageData(this.state.page, this.state.rowsPerPage);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(item);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        keyword: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n,\n          handleClose = _this$props2.handleClose,\n          handleSelect = _this$props2.handleSelect,\n          selectedItem = _this$props2.selectedItem,\n          open = _this$props2.open;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          name = _this$state.name,\n          code = _this$state.code,\n          shouldOpenNotificationPopup = _this$state.shouldOpenNotificationPopup;\n      var columns = [{\n        title: t(\"CommonObjectType.name\"),\n        field: \"name\",\n        width: \"150\"\n      }, {\n        title: t(\"CommonObjectType.code\"),\n        field: \"code\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"general.action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(Radio, {\n            name: \"radSelected\",\n            value: rowData.id,\n            checked: _this2.state.selectedValue === rowData.id,\n            onClick: function onClick(event) {\n              return _this2.handleClick(event, rowData);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 28\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, shouldOpenNotificationPopup && /*#__PURE__*/React.createElement(NotificationPopup, {\n        title: t('general.noti'),\n        open: shouldOpenNotificationPopup // onConfirmDialogClose={this.handleDialogClose}\n        ,\n        onYesClick: this.handleDialogClose,\n        text: t(this.state.Notification),\n        agree: t('general.agree'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, t(\"general.saveUpdate\")), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 32\n          }\n        }, \"*\"), t('CommonObjectType.name')),\n        onChange: this.handleChangeName,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 32\n          }\n        }, \"*\"), t('CommonObjectType.code')),\n        onChange: this.handleChangeCode,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-36\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, t('general.cancel')), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, t('general.save'))))));\n    }\n  }]);\n\n  return CommonObjectTypeDialog;\n}(React.Component);\n\nexport default CommonObjectTypeDialog;","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/CommonObjectType/CommonObjectTypeDialog.jsx"],"names":["Grid","MuiThemeProvider","DialogActions","TextField","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","Radio","Dialog","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","getByPage","saveItem","checkCode","DateFnsUtils","ValidatorForm","TextValidator","DialogContent","DialogTitle","Input","InputLabel","MenuItem","FormControl","Select","AsynchronousAutocomplete","Draggable","Paper","NotificationPopup","PaperComponent","props","CommonObjectTypeDialog","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectedItem","keyword","shouldOpenNotificationPopup","Notification","setPage","setState","updatePageData","setRowsPerPage","event","target","value","handleChangePage","newPage","searchObject","pageIndex","pageSize","then","content","handleClick","item","id","selectedValue","search","text","handleChangeName","name","handleChangeCode","code","handleFormSubmit","result","handleClose","handleDialogClose","handleChange","bind","open","t","i18n","handleSelect","columns","title","field","width","align","render","rowData","cursor","color"],"mappings":"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","sourcesContent":["import { Grid, MuiThemeProvider,DialogActions, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Radio, Dialog } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { getByPage, saveItem, checkCode } from \"./CommonObjectTypeService\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport NotificationPopup from '../Component/NotificationPopup/NotificationPopup'\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass CommonObjectTypeDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  state = {\r\n    rowsPerPage: 5,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectedItem: {},\r\n    keyword: '',\r\n    shouldOpenNotificationPopup:false,\r\n    Notification:\"\"\r\n  };\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.pageIndex = this.state.page;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    getByPage(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    }\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.updatePageData(this.state.page, this.state.rowsPerPage);\r\n  }\r\n\r\n  handleClick = (event, item) => {\r\n    //alert(item);\r\n    if (item.id != null) {\r\n      this.setState({ selectedValue: item.id, selectedItem: item });\r\n    } else {\r\n      this.setState({ selectedValue: item.id, selectedItem: null });\r\n    }\r\n\r\n  }\r\n  componentWillMount() {\r\n    let { open, handleClose, item } = this.props;\r\n    this.setState(item);\r\n  }\r\n  search = (keyword) => {\r\n    var searchObject = {};\r\n    searchObject.text = keyword;\r\n    searchObject.pageIndex = this.state.page;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    getByPage(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ keyword: event.target.value });\r\n  }\r\n  handleChangeName = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n  handleChangeCode = (event) => {\r\n    this.setState({ code: event.target.value });\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state;\r\n    let { code } = this.state;\r\n\r\n    checkCode(id, code).then((result) => {\r\n      //Nếu trả về true là code đã được sử dụng\r\n      if (result.data) {\r\n        this.setState({shouldOpenNotificationPopup: true,\r\n          Notification:\"CommonObjectType.noti.dupli_code\"})\r\n        // alert(\"Code đã được sử dụng\");\r\n      } else {\r\n        saveItem({ ...this.state }).then(() => {\r\n          this.props.handleClose();\r\n        });\r\n      }\r\n    });\r\n    \r\n  }\r\n  handleDialogClose =()=>{\r\n    this.setState({shouldOpenNotificationPopup:false,})\r\n  }\r\n  render() {\r\n\r\n    const { t, i18n, handleClose, handleSelect, selectedItem, open } = this.props;\r\n    let { keyword, name, code,shouldOpenNotificationPopup } = this.state;\r\n    let columns = [\r\n      { title: t(\"CommonObjectType.name\"), field: \"name\", width: \"150\" },\r\n      { title: t(\"CommonObjectType.code\"), field: \"code\", align: \"left\", width: \"150\" },\r\n\r\n      {\r\n        title: t(\"general.action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => <Radio name=\"radSelected\" value={rowData.id} checked={this.state.selectedValue === rowData.id} onClick={(event) => this.handleClick(event, rowData)}\r\n        />\r\n      },\r\n    ];\r\n    return (\r\n      <Dialog open={open} PaperComponent={PaperComponent}>\r\n       {shouldOpenNotificationPopup && (\r\n                  <NotificationPopup\r\n                    title={t('general.noti')}\r\n                    open={shouldOpenNotificationPopup}\r\n                    // onConfirmDialogClose={this.handleDialogClose}\r\n                    onYesClick={this.handleDialogClose}\r\n                    text={t(this.state.Notification)}\r\n                    agree={t('general.agree')}\r\n                  />\r\n                )} \r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          {t(\"general.saveUpdate\")}\r\n        </DialogTitle>\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n        <DialogContent>\r\n            <Grid className=\"mb-16\" container spacing={2}>\r\n              <Grid item sm={12} xs={12}>\r\n                {/* <Autocomplete\r\n                              multiple\r\n                              className=\"w-100\"\r\n                              id=\"tags-standard\"\r\n                              options={serumBottleList?serumBottleList:[{id: 0, value:\"xxx\", label:\"none\"}]}\r\n                              getOptionLabel={(option) => option.label}\r\n                              // defaultValue={[serumBottleList[13]]}\r\n                              renderInput={(params) => (\r\n                                  <TextField\r\n                                      {...params}\r\n                                      variant=\"standard\"\r\n                                      label={t(\"SampleManagement.sample-list.EqaSerumBank\")}\r\n                                      placeholder={t(\"SampleManagement.sample-list.EqaSerumBank\")}\r\n                                  />\r\n                              )}\r\n                          /> */}\r\n                {/* <AsynchronousAutocomplete label={t(\"SampleManagement.bottle\")}\r\n                              searchFunction={serumBottleSearchByPage}\r\n                              searchObject={searchObject}\r\n                              defaultValue={defaultValue}\r\n                              onSelect={this.selectBottle}\r\n                              multiple={true}\r\n                          /> */}\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  \r\n                  label={<span><span style={{color:\"red\"}}>*</span>{t('CommonObjectType.name')}</span>}\r\n                  onChange={this.handleChangeName}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={<span><span style={{color:\"red\"}}>*</span>{t('CommonObjectType.code')}</span>}\r\n                  \r\n                  onChange={this.handleChangeCode}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <div className=\"flex flex-space-between flex-middle\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-36\"\r\n\r\n              color=\"secondary\"\r\n              onClick={() => this.props.handleClose()}\r\n            >\r\n              {t('general.cancel')}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              {t('general.save')}\r\n            </Button>\r\n            \r\n          </div>\r\n        </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog >\r\n    );\r\n  }\r\n}\r\nexport default CommonObjectTypeDialog;"]},"metadata":{},"sourceType":"module"}