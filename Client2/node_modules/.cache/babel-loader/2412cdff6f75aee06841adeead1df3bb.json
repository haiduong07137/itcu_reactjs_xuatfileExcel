{"ast":null,"code":"import _objectSpread from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\CommonObject\\\\CommonObjectDialog.jsx\";\nimport { Grid, DialogActions, MuiThemeProvider, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Radio, Dialog } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { getByPage, saveItem, checkCode } from \"./CommonObjectService\";\nimport * as commonObjectTypeService from \"./../CommonObjectType/CommonObjectTypeService\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport NotificationPopup from '../Component/NotificationPopup/NotificationPopup';\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar CommonObjectDialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(CommonObjectDialog, _React$Component);\n\n  var _super = _createSuper(CommonObjectDialog);\n\n  function CommonObjectDialog(props) {\n    var _this;\n\n    _classCallCheck(this, CommonObjectDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 5,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectedItem: {},\n      commonObjectTypes: [],\n      type: {},\n      keyword: '',\n      shouldOpenNotificationPopup: false,\n      Notification: \"\"\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenNotificationPopup: false\n      });\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangeCommonObjectType = function (event, source) {\n      var commonObjectTypes = _this.state.commonObjectTypes;\n\n      _this.setState({\n        type: commonObjectTypes.find(function (item) {\n          return item.id === event.target.value;\n        }),\n        typeId: event.target.value\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.pageIndex = _this.state.page;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      getByPage(searchObject).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleClick = function (event, item) {\n      //alert(item);\n      if (item.id != null) {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: item\n        });\n      } else {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: null\n        });\n      }\n    };\n\n    _this.search = function (keyword) {\n      var searchObject = {};\n      searchObject.text = keyword;\n      searchObject.pageIndex = _this.state.page;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      getByPage(searchObject).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleChangeName = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleChangeCode = function (event) {\n      _this.setState({\n        code: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var code = _this.state.code;\n      checkCode(id, code).then(function (result) {\n        //Nếu trả về true là code đã được sử dụng\n        if (result.data) {\n          _this.setState({\n            shouldOpenNotificationPopup: true,\n            Notification: \"CommonObject.noti.dupli_code\"\n          }); // alert(\"Code đã được sử dụng\");\n\n        } else {\n          saveItem(_objectSpread({}, _this.state)).then(function () {\n            _this.props.handleClose();\n          });\n        }\n      });\n    };\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CommonObjectDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.updatePageData(this.state.page, this.state.rowsPerPage);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      commonObjectTypeService.searchByPage(null, 0, 1000).then(function (_ref3) {\n        var data = _ref3.data;\n        var commonObjectTypes = data.content;\n\n        _this2.setState({\n          commonObjectTypes\n        });\n      });\n      var item = this.props.item;\n      this.setState(_objectSpread({}, item), function () {\n        var type = _this2.state.type;\n\n        if (type && type.id) {\n          _this2.setState({\n            typeId: type.id\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        keyword: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          handleClose = _this$props.handleClose,\n          handleSelect = _this$props.handleSelect,\n          selectedItem = _this$props.selectedItem,\n          open = _this$props.open;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          name = _this$state.name,\n          code = _this$state.code,\n          type = _this$state.type,\n          typeId = _this$state.typeId,\n          commonObjectTypes = _this$state.commonObjectTypes,\n          shouldOpenNotificationPopup = _this$state.shouldOpenNotificationPopup;\n      var columns = [{\n        title: t(\"CommonObject.name\"),\n        field: \"name\",\n        width: \"150\"\n      }, {\n        title: t(\"CommonObject.vode\"),\n        field: \"code\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"general.action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(Radio, {\n            name: \"radSelected\",\n            value: rowData.id,\n            checked: _this3.state.selectedValue === rowData.id,\n            onClick: function onClick(event) {\n              return _this3.handleClick(event, rowData);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 28\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }, shouldOpenNotificationPopup && /*#__PURE__*/React.createElement(NotificationPopup, {\n        title: t('general.noti'),\n        open: shouldOpenNotificationPopup // onConfirmDialogClose={this.handleDialogClose}\n        ,\n        onYesClick: this.handleDialogClose,\n        text: t(this.state.Notification),\n        agree: t('general.agree'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, t(\"general.saveUpdate\")), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 32\n          }\n        }, \"*\"), t('CommonObjectType.name')),\n        onChange: this.handleChangeName,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 32\n          }\n        }, \"*\"), t('CommonObjectType.code')),\n        onChange: this.handleChangeCode,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }\n      }, t(\"CommonObjectType.title\")), /*#__PURE__*/React.createElement(Select, {\n        value: typeId,\n        onChange: function onChange(event) {\n          return _this3.handleChangeCommonObjectType(event);\n        },\n        inputProps: {\n          name: \"type\",\n          id: \"type\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 19\n        }\n      }, commonObjectTypes && commonObjectTypes.length > 0 && commonObjectTypes.map(function (typeSelected) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: typeSelected.id,\n          value: typeSelected.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 23\n          }\n        }, typeSelected.name);\n      })))))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-36\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this3.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 12\n        }\n      }, t('general.cancel')), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }, t('general.save'))))));\n    }\n  }]);\n\n  return CommonObjectDialog;\n}(React.Component);\n\nexport default CommonObjectDialog;","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/CommonObject/CommonObjectDialog.jsx"],"names":["Grid","DialogActions","MuiThemeProvider","TextField","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","Radio","Dialog","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","getByPage","saveItem","checkCode","commonObjectTypeService","DateFnsUtils","ValidatorForm","TextValidator","DialogContent","DialogTitle","Input","InputLabel","MenuItem","FormControl","Select","AsynchronousAutocomplete","Draggable","Paper","NotificationPopup","PaperComponent","props","CommonObjectDialog","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectedItem","commonObjectTypes","type","keyword","shouldOpenNotificationPopup","Notification","handleDialogClose","setState","setPage","updatePageData","handleChangeCommonObjectType","event","source","find","item","id","target","value","typeId","setRowsPerPage","handleChangePage","newPage","searchObject","pageIndex","pageSize","then","content","handleClick","selectedValue","search","text","handleChangeName","name","handleChangeCode","code","handleFormSubmit","result","handleClose","handleChange","bind","searchByPage","t","i18n","handleSelect","open","columns","title","field","width","align","render","rowData","cursor","color","length","map","typeSelected"],"mappings":"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","sourcesContent":["import { Grid, DialogActions, MuiThemeProvider, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Radio, Dialog } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { getByPage, saveItem, checkCode } from \"./CommonObjectService\";\r\nimport * as commonObjectTypeService from \"./../CommonObjectType/CommonObjectTypeService\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport NotificationPopup from '../Component/NotificationPopup/NotificationPopup';\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass CommonObjectDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  state = {\r\n    rowsPerPage: 5,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectedItem: {},\r\n    commonObjectTypes: [],\r\n    type: {},\r\n    keyword: '',\r\n    shouldOpenNotificationPopup:false,\r\n    Notification:\"\",\r\n  };\r\n  handleDialogClose =()=>{\r\n    this.setState({shouldOpenNotificationPopup:false,})\r\n  }\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n  handleChangeCommonObjectType = (event, source) => {\r\n    let {commonObjectTypes} = this.state;\r\n    this.setState({\r\n      type: commonObjectTypes.find((item) => item.id === event.target.value),\r\n      typeId: event.target.value\r\n    });\r\n  }\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.pageIndex = this.state.page;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    getByPage(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    }\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.updatePageData(this.state.page, this.state.rowsPerPage);\r\n  }\r\n\r\n  handleClick = (event, item) => {\r\n    //alert(item);\r\n    if (item.id != null) {\r\n      this.setState({ selectedValue: item.id, selectedItem: item });\r\n    } else {\r\n      this.setState({ selectedValue: item.id, selectedItem: null });\r\n    }\r\n\r\n  }\r\n  componentWillMount() {\r\n    commonObjectTypeService.searchByPage(null, 0, 1000).then(({data}) => {\r\n      let commonObjectTypes = data.content;\r\n      this.setState({commonObjectTypes});\r\n    });\r\n    let {item} = this.props;\r\n    this.setState({...item}, () => {\r\n      let {type} = this.state;\r\n      if(type && type.id){\r\n        this.setState({typeId: type.id});\r\n      }\r\n    });\r\n  }\r\n  search = (keyword) => {\r\n    var searchObject = {};\r\n    searchObject.text = keyword;\r\n    searchObject.pageIndex = this.state.page;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    getByPage(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ keyword: event.target.value });\r\n  }\r\n  handleChangeName = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n  handleChangeCode = (event) => {\r\n    this.setState({ code: event.target.value });\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state;\r\n    let { code } = this.state;\r\n\r\n    checkCode(id, code).then((result) => {\r\n      //Nếu trả về true là code đã được sử dụng\r\n      if (result.data) {\r\n        this.setState({shouldOpenNotificationPopup: true,\r\n          Notification:\"CommonObject.noti.dupli_code\"}) \r\n        // alert(\"Code đã được sử dụng\");\r\n      } else {\r\n        saveItem({ ...this.state }).then(() => {\r\n          this.props.handleClose();\r\n        });\r\n      }\r\n    });\r\n    \r\n  }\r\n  render() {\r\n\r\n    const { t, i18n, handleClose, handleSelect, selectedItem, open } = this.props;\r\n    let { keyword, name, code, type, typeId, commonObjectTypes,shouldOpenNotificationPopup} = this.state;\r\n    let columns = [\r\n      { title: t(\"CommonObject.name\"), field: \"name\", width: \"150\" },\r\n      { title: t(\"CommonObject.vode\"), field: \"code\", align: \"left\", width: \"150\" },\r\n\r\n      {\r\n        title: t(\"general.action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => <Radio name=\"radSelected\" value={rowData.id} checked={this.state.selectedValue === rowData.id} onClick={(event) => this.handleClick(event, rowData)}\r\n        />\r\n      },\r\n    ];\r\n    return (\r\n      <Dialog open={open} PaperComponent={PaperComponent}>\r\n      {shouldOpenNotificationPopup && (\r\n                  <NotificationPopup\r\n                    title={t('general.noti')}\r\n                    open={shouldOpenNotificationPopup}\r\n                    // onConfirmDialogClose={this.handleDialogClose}\r\n                    onYesClick={this.handleDialogClose}\r\n                    text={t(this.state.Notification)}\r\n                    agree={t('general.agree')}\r\n                  />\r\n                )}\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          {t(\"general.saveUpdate\")}\r\n        </DialogTitle>\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n        <DialogContent>\r\n            <Grid className=\"mb-16\" container spacing={2}>\r\n              <Grid item sm={12} xs={12}>\r\n                {/* <Autocomplete\r\n                              multiple\r\n                              className=\"w-100\"\r\n                              id=\"tags-standard\"\r\n                              options={serumBottleList?serumBottleList:[{id: 0, value:\"xxx\", label:\"none\"}]}\r\n                              getOptionLabel={(option) => option.label}\r\n                              // defaultValue={[serumBottleList[13]]}\r\n                              renderInput={(params) => (\r\n                                  <TextField\r\n                                      {...params}\r\n                                      variant=\"standard\"\r\n                                      label={t(\"SampleManagement.sample-list.EqaSerumBank\")}\r\n                                      placeholder={t(\"SampleManagement.sample-list.EqaSerumBank\")}\r\n                                  />\r\n                              )}\r\n                          /> */}\r\n                {/* <AsynchronousAutocomplete label={t(\"SampleManagement.bottle\")}\r\n                              searchFunction={serumBottleSearchByPage}\r\n                              searchObject={searchObject}\r\n                              defaultValue={defaultValue}\r\n                              onSelect={this.selectBottle}\r\n                              multiple={true}\r\n                          /> */}\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  label={<span><span style={{color:\"red\"}}>*</span>{t('CommonObjectType.name')}</span>}\r\n                  onChange={this.handleChangeName}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={<span><span style={{color:\"red\"}}>*</span>{t('CommonObjectType.code')}</span>}\r\n                  onChange={this.handleChangeCode}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item sm={12} xs={12}>\r\n                <FormControl className=\"w-100\">\r\n                  <InputLabel htmlFor=\"type\">{t(\"CommonObjectType.title\")}</InputLabel>\r\n                  <Select\r\n                    value={typeId}\r\n                    onChange={event => this.handleChangeCommonObjectType(event)}\r\n                    inputProps={{\r\n                      name: \"type\",\r\n                      id: \"type\"\r\n                    }}\r\n                  >\r\n                    {(commonObjectTypes && commonObjectTypes.length > 0 && commonObjectTypes.map(typeSelected => (\r\n                      <MenuItem key={typeSelected.id} value={typeSelected.id}>\r\n                        {typeSelected.name}\r\n                      </MenuItem>\r\n                    )))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <div className=\"flex flex-space-between flex-middle\">\r\n           <Button\r\n              variant=\"contained\"\r\n              className=\"mr-36\"\r\n\r\n              color=\"secondary\"\r\n              onClick={() => this.props.handleClose()}\r\n            >\r\n              {t('general.cancel')}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              {t('general.save')}\r\n            </Button>\r\n            \r\n          </div>\r\n        </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog >\r\n    );\r\n  }\r\n}\r\nexport default CommonObjectDialog;"]},"metadata":{},"sourceType":"module"}