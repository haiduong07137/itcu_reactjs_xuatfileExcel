{"ast":null,"code":"import _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\material-kit\\\\forms\\\\SimpleForm.jsx\";\nimport React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Button, Icon, Grid, Radio, RadioGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nvar SimpleForm = /*#__PURE__*/function (_Component) {\n  _inherits(SimpleForm, _Component);\n\n  var _super = _createSuper(SimpleForm);\n\n  function SimpleForm() {\n    var _this;\n\n    _classCallCheck(this, SimpleForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: \"\",\n      firstName: \"\",\n      email: \"\",\n      date: new Date(),\n      creditCard: \"\",\n      mobile: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      gender: \"\",\n      agreement: \"\"\n    };\n\n    _this.handleSubmit = function (event) {};\n\n    _this.handleChange = function (event) {\n      event.persist();\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleDateChange = function (date) {\n      _this.setState({\n        date\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // custom rule will have name 'isPasswordMatch'\n      ValidatorForm.addValidationRule(\"isPasswordMatch\", function (value) {\n        if (value !== _this2.state.password) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove rule when it is not needed\n      ValidatorForm.removeValidationRule(\"isPasswordMatch\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          username = _this$state.username,\n          firstName = _this$state.firstName,\n          creditCard = _this$state.creditCard,\n          mobile = _this$state.mobile,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword,\n          gender = _this$state.gender,\n          date = _this$state.date,\n          email = _this$state.email;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        onError: function onError(errors) {\n          return null;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-16 w-100\",\n        label: \"Username (Min length 4, Max length 9)\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        validators: [\"required\", \"minStringLength: 4\", \"maxStringLength: 9\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-16 w-100\",\n        label: \"First Name\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"firstName\",\n        value: firstName,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-16 w-100\",\n        label: \"Email\",\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\", \"isEmail\"],\n        errorMessages: [\"this field is required\", \"email is not valid\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        className: \"mb-16 w-100\",\n        margin: \"none\",\n        id: \"mui-pickers-date\",\n        label: \"Date picker\",\n        inputVariant: \"standard\",\n        type: \"text\",\n        autoOk: true,\n        value: date,\n        onChange: this.handleDateChange,\n        KeyboardButtonProps: {\n          \"aria-label\": \"change date\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-32 w-100\",\n        label: \"Credit Card\",\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"creditCard\",\n        value: creditCard,\n        validators: [\"required\", \"minStringLength:16\", \"maxStringLength: 16\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-16 w-100\",\n        label: \"Mobile Nubmer\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"mobile\",\n        value: mobile,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-16 w-100\",\n        label: \"Password\",\n        onChange: this.handleChange,\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-16 w-100\",\n        label: \"Confirm Password\",\n        onChange: this.handleChange,\n        name: \"confirmPassword\",\n        type: \"password\",\n        value: confirmPassword,\n        validators: [\"required\", \"isPasswordMatch\"],\n        errorMessages: [\"this field is required\", \"password didn't match\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(RadioGroup, {\n        className: \"mb-16\",\n        value: gender,\n        name: \"gender\",\n        onChange: this.handleChange,\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"Male\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          color: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 28\n          }\n        }),\n        label: \"Male\",\n        labelPlacement: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"Female\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          color: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 28\n          }\n        }),\n        label: \"Female\",\n        labelPlacement: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: \"Others\",\n        control: /*#__PURE__*/React.createElement(Radio, {\n          color: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 28\n          }\n        }),\n        label: \"Others\",\n        labelPlacement: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 26\n          }\n        }),\n        label: \"I have read and agree to the terms of service.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      }, \"send\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pl-8 capitalize\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, \"Send\"))));\n    }\n  }]);\n\n  return SimpleForm;\n}(Component);\n\nexport default SimpleForm;","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/material-kit/forms/SimpleForm.jsx"],"names":["React","Component","ValidatorForm","TextValidator","Button","Icon","Grid","Radio","RadioGroup","FormControlLabel","Checkbox","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","SimpleForm","state","username","firstName","email","date","Date","creditCard","mobile","password","confirmPassword","gender","agreement","handleSubmit","event","handleChange","persist","setState","target","name","value","handleDateChange","addValidationRule","removeValidationRule","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nclass SimpleForm extends Component {\n  state = {\n    username: \"\",\n    firstName: \"\",\n    email: \"\",\n    date: new Date(),\n    creditCard: \"\",\n    mobile: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    gender: \"\",\n    agreement: \"\"\n  };\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\n      if (value !== this.state.password) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule(\"isPasswordMatch\");\n  }\n\n  handleSubmit = event => {\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleDateChange = date => {\n    this.setState({ date });\n  };\n\n  render() {\n    let {\n      username,\n      firstName,\n      creditCard,\n      mobile,\n      password,\n      confirmPassword,\n      gender,\n      date,\n      email\n    } = this.state;\n    return (\n      <div>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => null}\n        >\n          <Grid container spacing={6}>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Username (Min length 4, Max length 9)\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                validators={[\n                  \"required\",\n                  \"minStringLength: 4\",\n                  \"maxStringLength: 9\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"First Name\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"firstName\"\n                value={firstName}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Email\"\n                onChange={this.handleChange}\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                validators={[\"required\", \"isEmail\"]}\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\n              />\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  className=\"mb-16 w-100\"\n                  margin=\"none\"\n                  id=\"mui-pickers-date\"\n                  label=\"Date picker\"\n                  inputVariant=\"standard\"\n                  type=\"text\"\n                  autoOk={true}\n                  value={date}\n                  onChange={this.handleDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\"\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n              <TextValidator\n                className=\"mb-32 w-100\"\n                label=\"Credit Card\"\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"creditCard\"\n                value={creditCard}\n                validators={[\n                  \"required\",\n                  \"minStringLength:16\",\n                  \"maxStringLength: 16\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n            </Grid>\n\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Mobile Nubmer\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"mobile\"\n                value={mobile}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Password\"\n                onChange={this.handleChange}\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Confirm Password\"\n                onChange={this.handleChange}\n                name=\"confirmPassword\"\n                type=\"password\"\n                value={confirmPassword}\n                validators={[\"required\", \"isPasswordMatch\"]}\n                errorMessages={[\n                  \"this field is required\",\n                  \"password didn't match\"\n                ]}\n              />\n              <RadioGroup\n                className=\"mb-16\"\n                value={gender}\n                name=\"gender\"\n                onChange={this.handleChange}\n                row\n              >\n                <FormControlLabel\n                  value=\"Male\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Male\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Female\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Female\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Others\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Others\"\n                  labelPlacement=\"end\"\n                />\n              </RadioGroup>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"I have read and agree to the terms of service.\"\n              />\n            </Grid>\n          </Grid>\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            <Icon>send</Icon>\n            <span className=\"pl-8 capitalize\">Send</span>\n          </Button>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default SimpleForm;\n"]},"metadata":{},"sourceType":"module"}