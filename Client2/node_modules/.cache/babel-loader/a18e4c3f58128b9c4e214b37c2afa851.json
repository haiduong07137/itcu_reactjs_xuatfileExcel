{"ast":null,"code":"import _toConsumableArray from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\User\\\\User.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, IconButton, Icon, TablePagination, Button, TextField, FormControl, Input, InputAdornment } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { findUserByUserName, searchByPage, getUserDepartmentByUserId, getItemById } from \"./UserService\";\nimport UserEditorDialog from \"./UserEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport shortid from \"shortid\";\nimport { saveAs } from 'file-saver';\nimport { Helmet } from 'react-helmet';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from \"react-router-dom\";\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"edit\")));\n}\n\nvar User = /*#__PURE__*/function (_Component) {\n  _inherits(User, _Component);\n\n  var _super = _createSuper(User);\n\n  function User() {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      userDepartmentId: '',\n      keyword: '',\n      rowsPerPage: 10,\n      page: 0,\n      eQAHealthOrgType: [],\n      item: {},\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      shouldOpenConfirmationDeleteAllDialog: false\n    };\n    _this.numSelected = 0;\n    _this.rowCount = 0;\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.search();\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.keyword = _this.state.keyword;\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      findUserByUserName(searchObject).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleDownload = function () {\n      var blob = new Blob([\"Hello, world!\"], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"hello world.txt\");\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleDeleteUser = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleEditUser = function (item) {\n      getItemById(item.id).then(function (result) {\n        _this.setState({\n          item: result.data,\n          shouldOpenEditorDialog: true\n        });\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDeleteAll = function (event) {\n      //alert(this.data.length);\n      _this.handleDeleteList(_this.data).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"search\",\n    value: function search() {\n      this.setState({\n        page: 0\n      }, function () {\n        var _this2 = this;\n\n        var searchObject = {};\n        searchObject.keyword = this.state.keyword;\n        searchObject.pageIndex = this.state.page + 1;\n        searchObject.pageSize = this.state.rowsPerPage;\n        findUserByUserName(searchObject).then(function (_ref2) {\n          var data = _ref2.data;\n\n          _this2.setState({\n            itemList: _toConsumableArray(data.content),\n            totalElements: data.totalElements\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    // handleConfirmationResponse = () => {\n    //   deleteItem(this.state.id).then(() => {\n    //     this.updatePageData();\n    //     this.handleDialogClose();\n    //   });\n    // };\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          id = _this$state.id,\n          userDepartmentId = _this$state.userDepartmentId,\n          keyword = _this$state.keyword,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          totalElements = _this$state.totalElements,\n          itemList = _this$state.itemList,\n          item = _this$state.item,\n          department = _this$state.department,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog,\n          shouldOpenConfirmationDeleteAllDialog = _this$state.shouldOpenConfirmationDeleteAllDialog;\n      var TitlePage = t(\"user.title\");\n      var columns = [{\n        title: t(\"general.index\"),\n        field: \"code\",\n        width: \"150\",\n        align: \"center\",\n        render: function render(rowData) {\n          return page * rowsPerPage + (rowData.tableData.id + 1);\n        }\n      }, {\n        title: t(\"user.username\"),\n        field: \"user.username\",\n        width: \"150\"\n      }, {\n        title: t(\"user.displayName\"),\n        field: \"user.displayName\",\n        width: \"150\"\n      }, {\n        title: t(\"user.email\"),\n        field: \"user.email\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"user.isMainDepartment\"),\n        field: \"department.name\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"general.action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.user.id).then(function (_ref3) {\n                  var data = _ref3.data;\n\n                  if (data != null && data.id != null) {\n                    _this3.setState({\n                      item: data\n                    }, function () {\n                      this.setState({\n                        shouldOpenEditorDialog: true\n                      });\n                    });\n                  }\n                });\n              } else if (method === 1) {\n                _this3.handleDelete(rowData.id);\n              } else {\n                alert('Call Selected Here:' + rowData.id);\n              }\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 28\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, TitlePage, \" | \", t('web_site'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"Dashboard.manage\"),\n          path: \"/manage/user\"\n        }, {\n          name: TitlePage\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 3,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mt-10 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.handleEditItem({\n            startDate: new Date(),\n            endDate: new Date(),\n            isAddNew: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }\n      }, t('general.add')), shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        text: t('DeleteAllConfirm'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"search_box w-100\",\n        onChange: this.handleTextChange,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        placeholder: t(\"user.filter\"),\n        id: \"search_box\",\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          style: {\n            marginRight: \"2%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 27\n          }\n        }, \" \", /*#__PURE__*/React.createElement(SearchIcon, {\n          onClick: function onClick() {\n            return _this3.search(keyword);\n          },\n          style: {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 34\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, shouldOpenEditorDialog && /*#__PURE__*/React.createElement(UserEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        department: department,\n        userDepartmentId: userDepartmentId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 17\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"general.confirm\"),\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t('DeleteConfirm'),\n        agree: t('general.agree'),\n        cancel: t('general.cancel'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('user.userList'),\n        data: itemList,\n        columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        ,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t('general.emptyDataMessageTable'))\n          }\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: 0,\n          paging: false,\n          search: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.data = rows; // this.setState({selectedItems:rows});\n        },\n        actions: [{\n          hidden: true,\n          isFreeAction: true,\n          tooltip: 'Remove All Selected Users',\n          icon: 'delete',\n          onClick: function onClick(evt, data) {\n            _this3.handleDeleteAll(data);\n\n            alert('You want to delete ' + data.length + ' rows');\n          }\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/User/User.jsx"],"names":["React","Component","Grid","IconButton","Icon","TablePagination","Button","TextField","FormControl","Input","InputAdornment","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","findUserByUserName","searchByPage","getUserDepartmentByUserId","getItemById","UserEditorDialog","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","shortid","saveAs","Helmet","SearchIcon","Link","MaterialButton","props","t","i18n","item","onSelect","User","state","userDepartmentId","keyword","rowsPerPage","page","eQAHealthOrgType","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","shouldOpenConfirmationDeleteAllDialog","numSelected","rowCount","handleTextChange","event","setState","target","value","handleKeyDownEnterSearch","e","key","search","setPage","updatePageData","setRowsPerPage","handleChangePage","newPage","searchObject","pageIndex","pageSize","then","data","itemList","content","handleDownload","blob","Blob","type","handleDialogClose","handleOKEditClose","handleDeleteUser","id","handleEditUser","result","handleEditItem","handleDelete","handleDeleteAll","handleDeleteList","department","TitlePage","columns","title","field","width","align","render","rowData","tableData","method","user","alert","name","path","startDate","Date","endDate","isAddNew","marginRight","position","top","right","handleConfirmationResponse","row","rows","list","find","a","parentId","body","emptyDataSourceMessage","selection","actionsColumnIndex","paging","Toolbar","hidden","isFreeAction","tooltip","icon","onClick","evt","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Icon,\r\n  TablePagination,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  Input,InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { findUserByUserName, searchByPage, getUserDepartmentByUserId, getItemById } from \"./UserService\";\r\nimport UserEditorDialog from \"./UserEditorDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport shortid from \"shortid\";\r\nimport { saveAs } from 'file-saver';\r\nimport { Helmet } from 'react-helmet';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from \"react-router-dom\";\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton onClick={() => props.onSelect(item, 0)}>\r\n      <Icon color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    {/* <IconButton onClick={() => props.onSelect(item, 1)}>\r\n      <Icon color=\"error\">delete</Icon>\r\n    </IconButton> */}\r\n  </div>;\r\n}\r\n\r\nclass User extends Component {\r\n  state = {\r\n    userDepartmentId: '',\r\n    keyword: '',\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    eQAHealthOrgType: [],\r\n    item: {},\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectAllItem: false,\r\n    selectedList: [],\r\n    totalElements: 0,\r\n    shouldOpenConfirmationDeleteAllDialog: false\r\n  };\r\n  numSelected = 0;\r\n  rowCount = 0;\r\n\r\n  handleTextChange = event => {\r\n    this.setState({ keyword: event.target.value }, function () {\r\n    })\r\n  };\r\n\r\n\r\n  handleKeyDownEnterSearch = e => {\r\n    if (e.key === 'Enter') {\r\n      this.search();\r\n    }\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  search() {\r\n    this.setState({ page: 0 }, function () {\r\n      var searchObject = {};\r\n      searchObject.keyword = this.state.keyword;\r\n      searchObject.pageIndex = this.state.page + 1;\r\n      searchObject.pageSize = this.state.rowsPerPage;\r\n      findUserByUserName(searchObject).then(({ data }) => {\r\n        this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n      });\r\n    });\r\n  }\r\n\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.keyword = this.state.keyword;\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    findUserByUserName(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    });\r\n  }\r\n  // else {\r\n  //   searchByPage(searchObject.pageIndex, searchObject.pageSize).then(({ data }) => {\r\n  //     this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n  //   });\r\n  // }\r\n  // };\r\n\r\n  handleDownload = () => {\r\n    var blob = new Blob([\"Hello, world!\"], { type: \"text/plain;charset=utf-8\" });\r\n    saveAs(blob, \"hello world.txt\");\r\n  }\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false\r\n    });\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleDeleteUser = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleEditUser = item => {\r\n    getItemById(item.id).then((result) => {\r\n      this.setState({\r\n        item: result.data,\r\n        shouldOpenEditorDialog: true\r\n      });\r\n    });\r\n  };\r\n\r\n  // handleConfirmationResponse = () => {\r\n  //   deleteItem(this.state.id).then(() => {\r\n  //     this.updatePageData();\r\n  //     this.handleDialogClose();\r\n  //   });\r\n  // };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n\r\n  }\r\n  componentWillMount() {\r\n    this.updatePageData();\r\n\r\n  }\r\n\r\n\r\n  handleEditItem = item => {\r\n    this.setState({\r\n      item: item,\r\n      shouldOpenEditorDialog: true\r\n    });\r\n  };\r\n\r\n  handleDelete = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  // async handleDeleteList(list) {\r\n  //   for (var i = 0; i < list.length; i++) {\r\n  //     await deleteItem(list[i].id);\r\n  //   }\r\n  // }\r\n\r\n  handleDeleteAll = (event) => {\r\n    //alert(this.data.length);\r\n    this.handleDeleteList(this.data).then(() => {\r\n      this.updatePageData();\r\n      this.handleDialogClose();\r\n    }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let {\r\n      id,\r\n      userDepartmentId,\r\n      keyword,\r\n      rowsPerPage,\r\n      page,\r\n      totalElements,\r\n      itemList,\r\n      item,\r\n      department,\r\n      shouldOpenConfirmationDialog,\r\n      shouldOpenEditorDialog,\r\n      shouldOpenConfirmationDeleteAllDialog\r\n    } = this.state;\r\n    let TitlePage = t(\"user.title\");\r\n\r\n    let columns = [\r\n      {\r\n        title: t(\"general.index\"), field: \"code\", width: \"150\", align: \"center\",\r\n        render: rowData => ((page) * rowsPerPage) + (rowData.tableData.id + 1)\r\n      },\r\n      { title: t(\"user.username\"), field: \"user.username\", width: \"150\" },\r\n      { title: t(\"user.displayName\"), field: \"user.displayName\", width: \"150\" },\r\n      { title: t(\"user.email\"), field: \"user.email\", align: \"left\", width: \"150\" },\r\n      { title: t(\"user.isMainDepartment\"), field: \"department.name\", align: \"left\", width: \"150\" },\r\n\r\n      {\r\n        title: t(\"general.action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => <MaterialButton item={rowData}\r\n          onSelect={(rowData, method) => {\r\n            if (method === 0) {\r\n              getItemById(rowData.user.id).then(({ data }) => {\r\n                if (data != null && data.id != null) {\r\n                  this.setState({\r\n                    item: data\r\n                  }, function () {\r\n                    this.setState({ shouldOpenEditorDialog: true });\r\n                  });\r\n                }\r\n              });\r\n            } else if (method === 1) {\r\n              this.handleDelete(rowData.id);\r\n            } else {\r\n              alert('Call Selected Here:' + rowData.id);\r\n            }\r\n          }}\r\n        />\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <Helmet>\r\n          <title>{TitlePage} | {t('web_site')}</title>\r\n        </Helmet>\r\n        <div className=\"mb-sm-30\">\r\n          {/* <Breadcrumb routeSegments={[{ name: t('user.title') }]} /> */}\r\n          <Breadcrumb routeSegments={[\r\n            { name: t(\"Dashboard.manage\"), path: \"/manage/user\" },\r\n            { name: TitlePage }]} />\r\n        </div>\r\n\r\n        <Grid container spacing={2} justify=\"space-between\">\r\n        <Grid item md={3} xs={12} >\r\n            <Button\r\n              className=\"mt-10 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleEditItem({ startDate: new Date(), endDate: new Date(), isAddNew: true });\r\n              }\r\n              }\r\n            >\r\n              {t('general.add')}\r\n            </Button>\r\n            {shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                text={t('DeleteAllConfirm')}\r\n              />\r\n            )}\r\n            {/* <TextField\r\n              label={t('user.filter')}\r\n              className=\"mb-16 mr-10 w-60\"\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              value={keyword}\r\n              onKeyDown={this.handleKeyDownEnterSearch}\r\n              onChange={this.handleTextChange} />\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\" onClick={() => this.search(keyword)}>\r\n              {t('general.search')}\r\n            </Button> */}\r\n            </Grid>\r\n            <Grid item md={6} sm={12} xs={12} >\r\n            <FormControl fullWidth>\r\n                <Input\r\n                    className='search_box w-100'\r\n                    onChange={this.handleTextChange}\r\n                    onKeyDown={this.handleKeyDownEnterSearch}\r\n                    placeholder={t(\"user.filter\")}\r\n                    id=\"search_box\"\r\n                    startAdornment={\r\n                        <InputAdornment style ={{marginRight:\"2%\"}}>\r\n                            \r\n                          <Link> <SearchIcon \r\n                            onClick={() => this.search(keyword)}\r\n                            style ={{position:\"absolute\",\r\n                            top:\"0\",\r\n                            right:\"0\"\r\n                          }} /></Link>\r\n                        </InputAdornment>\r\n                    }\r\n                />\r\n          </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              {shouldOpenEditorDialog && (\r\n                <UserEditorDialog t={t} i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={item}\r\n                  department={department}\r\n                  userDepartmentId={userDepartmentId}\r\n                />\r\n              )}\r\n\r\n              {shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"general.confirm\")}\r\n                  open={shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t('DeleteConfirm')}\r\n                  agree={t('general.agree')}\r\n                  cancel={t('general.cancel')}\r\n                />\r\n              )}\r\n            </div>\r\n            <MaterialTable\r\n              title={t('user.userList')}\r\n              data={itemList}\r\n              columns={columns}\r\n              //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find(a => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t('general.emptyDataMessageTable')}`\r\n                }\r\n              }}\r\n              options={{\r\n                selection: false,\r\n                actionsColumnIndex: 0,\r\n                paging: false,\r\n                search: false\r\n              }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n                // this.setState({selectedItems:rows});\r\n              }}\r\n              actions={[\r\n                {\r\n                  hidden: true,\r\n                  isFreeAction: true,\r\n                  tooltip: 'Remove All Selected Users',\r\n                  icon: 'delete',\r\n                  onClick: (evt, data) => {\r\n                    this.handleDeleteAll(data);\r\n                    alert('You want to delete ' + data.length + ' rows');\r\n                  }\r\n                },\r\n              ]}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              count={totalElements}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}