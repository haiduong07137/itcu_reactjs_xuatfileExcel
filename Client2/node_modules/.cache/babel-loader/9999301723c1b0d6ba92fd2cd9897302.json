{"ast":null,"code":"import _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\page-layouts\\\\UserProfile.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport UploadForm from \"./UploadForm\";\nimport ConstantList from \"../../appConfig\";\nimport { Card, Icon, Avatar, Grid, Select, FormControl, Divider, IconButton, Button, withStyles, InputLabel, TextField } from \"@material-ui/core\";\nimport DummyChart from \"./DummyChart\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport localStorageService from \"../../services/localStorageService\";\nimport { useTranslation, withTranslation, Trans, t } from 'react-i18next';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { getCurrentUser } from './UserProfileService';\nimport UploadFormPopup from \"../Component/UploadFormPopup/UploadFormPopup\";\nvar API_PATH = ConstantList.API_ENPOINT + \"/api/fileUpload/\";\n\nvar UserProfile = /*#__PURE__*/function (_Component) {\n  _inherits(UserProfile, _Component);\n\n  var _super = _createSuper(UserProfile);\n\n  function UserProfile() {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      open: true,\n      user: {},\n      shouldOpenImageDialog: false\n    };\n\n    _this.toggleSidenav = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.handleWindowResize = function () {\n      return function (event) {\n        if (event.target.innerWidth < 768) {\n          _this.setState({\n            mobile: true\n          });\n        } else _this.setState({\n          mobile: false\n        });\n      };\n    };\n\n    _this.handleOpenUploadDialog = function () {\n      _this.setState({\n        shouldOpenImageDialog: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenImageDialog: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getCurrentUser().then(function (_ref) {\n        var data = _ref.data;\n\n        _this2.setState({\n          user: data\n        });\n      }); //let user = localStorageService.getLoginUser();\n\n      if (window.innerWidth < 768) {\n        this.setState({\n          open: false\n        });\n      }\n\n      if (window) this.windowResizeListener = window.addEventListener(\"resize\", function (event) {\n        if (event.target.innerWidth < 768) {\n          _this2.setState({\n            open: false\n          });\n        } else _this2.setState({\n          open: true\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var user = localStorageService.getLoginUser();\n      getCurrentUser();\n      this.setState({\n        user: user\n      });\n      if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var theme = this.props.theme;\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var genders = [{\n        id: 'M',\n        name: 'Nam'\n      }, {\n        id: 'F',\n        name: 'Nữ'\n      }, {\n        id: 'U',\n        name: 'Không rõ'\n      }];\n      var user = this.state.user;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        t: t,\n        i18n: i18n,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, this.state.shouldOpenImageDialog && /*#__PURE__*/React.createElement(UploadFormPopup, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: this.state.shouldOpenImageDialog,\n        uploadUrl: API_PATH + \"avatarUpload\",\n        acceptType: \"png;jpg;gif;jpeg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, t('user.person_info')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-profile__sidenav flex-column flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        className: \"avatar mb-20\",\n        src: ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\",\n        onClick: this.handleOpenUploadDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }), user.displayName), /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-10\",\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: t('user.firstName'),\n        value: user.person != null ? user.person.firstName : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: t('user.lastName'),\n        value: user.person != null ? user.person.lastName : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: t('user.displayName'),\n        value: user.displayName != null ? user.displayName : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-10\",\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: t('user.email'),\n        value: user.email != null ? user.email : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"standard-basic\",\n        label: t('user.username'),\n        value: user.username != null ? user.username : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"gender-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, t('user.gender')), /*#__PURE__*/React.createElement(Select, {\n        value: user.person ? user.person.gender : '',\n        onChange: function onChange(gender) {\n          return _this3.handleChange(gender, 'gender');\n        },\n        inputProps: {\n          name: 'gender',\n          id: 'gender-simple'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, genders.map(function (item) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }\n        }, item.name);\n      }))))), /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, t('general.update'))));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nexport default withStyles({}, {\n  withTheme: true\n})(UserProfile);","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/page-layouts/UserProfile.jsx"],"names":["React","Component","Fragment","UploadForm","ConstantList","Card","Icon","Avatar","Grid","Select","FormControl","Divider","IconButton","Button","withStyles","InputLabel","TextField","DummyChart","ProfileBarChart","ValidatorForm","TextValidator","localStorageService","useTranslation","withTranslation","Trans","t","MenuItem","getCurrentUser","UploadFormPopup","API_PATH","API_ENPOINT","UserProfile","state","open","user","shouldOpenImageDialog","toggleSidenav","setState","handleWindowResize","event","target","innerWidth","mobile","handleOpenUploadDialog","handleDialogClose","then","data","window","windowResizeListener","addEventListener","getLoginUser","removeEventListener","theme","props","i18n","genders","id","name","ROOT_PATH","displayName","person","firstName","lastName","email","username","gender","handleChange","map","item","withTheme"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport UploadForm from \"./UploadForm\";\nimport ConstantList from \"../../appConfig\";\nimport {\n  Card,\n  Icon,\n  Avatar,\n  Grid,\n  Select,\n  FormControl,\n  Divider,\n  IconButton,\n  Button,\n  withStyles,\n  InputLabel,\n  TextField\n} from \"@material-ui/core\";\nimport DummyChart from \"./DummyChart\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport localStorageService from \"../../services/localStorageService\";\nimport { useTranslation, withTranslation, Trans, t } from 'react-i18next';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { getCurrentUser } from './UserProfileService';\nimport UploadFormPopup from \"../Component/UploadFormPopup/UploadFormPopup\";\nconst API_PATH = ConstantList.API_ENPOINT + \"/api/fileUpload/\";\nclass UserProfile extends Component {\n  state = { open: true, user: {},shouldOpenImageDialog:false };\n  windowResizeListener;\n\n  toggleSidenav = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleWindowResize = () => {\n    return event => {\n      if (event.target.innerWidth < 768) {\n        this.setState({ mobile: true });\n      } else this.setState({ mobile: false });\n    };\n  };\n\n  componentDidMount() {\n    getCurrentUser().then(({ data }) => {\n      this.setState({ user: data });\n    });\n    //let user = localStorageService.getLoginUser();\n    if (window.innerWidth < 768) {\n      this.setState({ open: false });\n    }\n    if (window)\n      this.windowResizeListener = window.addEventListener(\"resize\", event => {\n        if (event.target.innerWidth < 768) {\n          this.setState({ open: false });\n        } else this.setState({ open: true });\n      });\n  }\n\n  componentWillUnmount() {\n    let user = localStorageService.getLoginUser();\n    getCurrentUser();\n    this.setState({ user: user });\n    if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n  handleOpenUploadDialog = () => {\n    this.setState({\n      shouldOpenImageDialog: true\n    });\n  }\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenImageDialog: false,\n    })\n  }\n  render() {\n    let { theme } = this.props;\n    let { t, i18n } = this.props;\n\n    const genders = [\n      { id: 'M', name: 'Nam' },\n      { id: 'F', name: 'Nữ' },\n      { id: 'U', name: 'Không rõ' },\n    ]\n    let user = this.state.user;\n\n    return (\n      <div className=\"m-sm-30\" t={t} i18n={i18n}>\n          {this.state.shouldOpenImageDialog && (\n            <UploadFormPopup t={t} i18n={i18n}\n              handleClose={this.handleDialogClose}\n              open={this.state.shouldOpenImageDialog}\n              uploadUrl={API_PATH+\"avatarUpload\"}\n              acceptType=\"png;jpg;gif;jpeg\"\n            />\n          )}        \n        <div>\n          {t('user.person_info')}\n        </div>\n        <div className=\"user-profile__sidenav flex-column flex-middle\">\n          <Avatar\n            className=\"avatar mb-20\"\n            src={ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\"}\n            onClick={\n              this.handleOpenUploadDialog\n            }\n          />\n          {user.displayName}\n        </div>\n        <Grid className=\"mb-10\" container spacing={3}>\n          <Grid item md={4} sm={12} xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField id=\"standard-basic\" label={t('user.firstName')} value={user.person != null ? user.person.firstName : ''} />\n            </FormControl>\n          </Grid>\n\n          <Grid item md={4} sm={12} xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField id=\"standard-basic\" label={t('user.lastName')} value={user.person != null ? user.person.lastName : ''} />\n            </FormControl>\n          </Grid>\n\n          <Grid item md={4} sm={12} xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField id=\"standard-basic\" label={t('user.displayName')} value={user.displayName != null ? user.displayName : ''} />\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Grid className=\"mb-10\" container spacing={3}>\n          <Grid item md={4} sm={12} xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField id=\"standard-basic\" label={t('user.email')} value={user.email != null ? user.email : ''} />\n            </FormControl>\n          </Grid>\n\n          <Grid item md={4} sm={12} xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField id=\"standard-basic\" label={t('user.username')} value={user.username != null ? user.username : ''} />\n            </FormControl>\n          </Grid>\n\n          <Grid item md={4} sm={12} xs={12}>\n            <FormControl fullWidth={true}>\n              <InputLabel htmlFor=\"gender-simple\">\n                {t('user.gender')}\n              </InputLabel>\n              <Select\n                value={user.person ? user.person.gender : ''}\n                onChange={(gender) => this.handleChange(gender, 'gender')}\n                inputProps={{\n                  name: 'gender',\n                  id: 'gender-simple',\n                }}\n              >\n                {genders.map((item) => {\n                  return (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.name}\n                    </MenuItem>\n                  )\n                })}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n       \n        <Grid className=\"mb-10\">\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                {t('general.update')}\n              </Button>\n       </Grid>           \n       \n      </div >\n    );\n  }\n}\n\nexport default withStyles({}, { withTheme: true })(UserProfile);\n"]},"metadata":{},"sourceType":"module"}