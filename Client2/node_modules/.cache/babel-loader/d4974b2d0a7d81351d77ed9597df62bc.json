{"ast":null,"code":"import _toConsumableArray from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\Activity Log\\\\ActivityLogTable.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, Button, Card, TextField, Grid } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { Breadcrumb, ConfirmationDialog, ShowDialog } from \"egret\";\nimport ConstantList from \"../../appConfig\";\nimport { searchByPage } from \"./ActivityLogService\";\nimport shortid from \"shortid\";\nimport moment from \"moment\";\nimport { SUCCESSFUL, FAILED } from \"./ActivityLogConstants\";\n\nfunction MaterialButton(props) {\n  var item = props.item;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    component: \"span\",\n    title: t(\"ActivityLog.view_log\"),\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"article\")));\n}\n\nvar ActivityLogTable = /*#__PURE__*/function (_Component) {\n  _inherits(ActivityLogTable, _Component);\n\n  var _super = _createSuper(ActivityLogTable);\n\n  function ActivityLogTable() {\n    var _this;\n\n    _classCallCheck(this, ActivityLogTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      keyword: \"\",\n      totalElements: 0,\n      activityLogList: [],\n      shouldOpenLogDialog: false,\n      log: \"\"\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenLogDialog: false\n      });\n    };\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === \"Enter\") {\n        _this.search();\n      }\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.keyword = _this.state.keyword;\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByPage(searchObject).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          activityLogList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ActivityLogTable, [{\n    key: \"search\",\n    value: function search() {\n      this.setState({\n        page: 0\n      }, function () {\n        var _this2 = this;\n\n        var searchObject = {};\n        searchObject.keyword = this.state.keyword;\n        searchObject.pageIndex = this.state.page + 1;\n        searchObject.pageSize = this.state.rowsPerPage;\n        searchByPage(searchObject).then(function (_ref2) {\n          var data = _ref2.data;\n\n          _this2.setState({\n            activityLogList: _toConsumableArray(data.content),\n            totalElements: data.totalElements\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          totalElements = _this$state.totalElements,\n          shouldOpenLogDialog = _this$state.shouldOpenLogDialog,\n          keyword = _this$state.keyword,\n          log = _this$state.log;\n      var columns = [{\n        title: t(\"ActivityLog.upload_time\"),\n        field: \"uploadTime\",\n        align: \"left\",\n        width: \"150\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }\n          }, moment(rowData.uploadTime).format(\"DD/MM/YYYY HH:MM:SS\"));\n        }\n      }, {\n        title: t(\"ActivityLog.file_name\"),\n        field: \"fileName\",\n        width: \"150\"\n      }, {\n        title: t(\"ActivityLog.status\"),\n        field: \"status\",\n        align: \"left\",\n        width: \"150\",\n        render: function render(rowData) {\n          switch (rowData.status) {\n            case SUCCESSFUL:\n              return t(\"ActivityLog.status_successful\");\n\n            case FAILED:\n              return t(\"ActivityLog.status_failed\");\n\n            default:\n              return \"\";\n          }\n        }\n      }, {\n        title: t(\"ActivityLog.log_detail\"),\n        field: \"logDetail\",\n        width: \"150\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                _this3.setState({\n                  shouldOpenLogDialog: true,\n                  log: rowData.logDetail\n                });\n              } else {\n                alert(\"Call Selected Here:\" + rowData.id);\n              }\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 11\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"ActivityLog.activity_log\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: t(\"ActivityLog.search\"),\n        className: \"mb-16 mr-20\",\n        type: \"text\",\n        name: \"keyword\",\n        value: keyword,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        onChange: this.handleTextChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.search(keyword);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginRight: \"5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }\n      }, t(\"general.search\")), /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, \"search\"))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"w-100 overflow-auto\",\n        elevation: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t(\"ActivityLog.activity_log\"),\n        data: this.state.activityLogList,\n        columns: columns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 39\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.data = rows;\n        } // actions={[\n        //   {\n        //     tooltip: 'Remove All Selected Users',\n        //     icon: 'delete',\n        //     onClick: (evt, data) => {\n        //       this.handleDeleteAll(data);\n        //       alert('You want to delete ' + data.length + ' rows');\n        //     }\n        //   },\n        // ]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        className: \"px-16\",\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(ShowDialog, {\n        title: t(\"ActivityLog.log_detail\"),\n        open: shouldOpenLogDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        text: log,\n        cancel: \"OK\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ActivityLogTable;\n}(Component);\n\nexport default ActivityLogTable;","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/Activity Log/ActivityLogTable.jsx"],"names":["React","Component","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","Button","Card","TextField","Grid","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","Breadcrumb","ConfirmationDialog","ShowDialog","ConstantList","searchByPage","shortid","moment","SUCCESSFUL","FAILED","MaterialButton","props","item","t","i18n","onSelect","ActivityLogTable","state","rowsPerPage","page","keyword","totalElements","activityLogList","shouldOpenLogDialog","log","setPage","setState","updatePageData","setRowsPerPage","event","target","value","handleChangePage","newPage","handleDialogClose","handleTextChange","handleKeyDownEnterSearch","e","key","search","searchObject","pageIndex","pageSize","then","data","content","columns","title","field","align","width","render","rowData","uploadTime","format","status","method","logDetail","alert","id","name","marginRight","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","Toolbar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination,\n  Button,\n  Card,\n  TextField,\n  Grid,\n} from \"@material-ui/core\";\nimport MaterialTable, {\n  MTableToolbar,\n  Chip,\n  MTableBody,\n  MTableHeader,\n} from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { Breadcrumb, ConfirmationDialog, ShowDialog } from \"egret\";\nimport ConstantList from \"../../appConfig\";\nimport { searchByPage } from \"./ActivityLogService\";\nimport shortid from \"shortid\";\nimport moment from \"moment\";\nimport { SUCCESSFUL, FAILED } from \"./ActivityLogConstants\";\nfunction MaterialButton(props) {\n  const item = props.item;\n  const { t, i18n } = useTranslation();\n  return (\n    <React.Fragment>\n      <IconButton\n        color=\"primary\"\n        component=\"span\"\n        title={t(\"ActivityLog.view_log\")}\n        onClick={() => props.onSelect(item, 0)}\n      >\n        <Icon>article</Icon>\n      </IconButton>\n    </React.Fragment>\n  );\n}\n\nclass ActivityLogTable extends Component {\n  state = {\n    rowsPerPage: 10,\n    page: 0,\n    keyword: \"\",\n    totalElements: 0,\n    activityLogList: [],\n    shouldOpenLogDialog: false,\n    log: \"\",\n  };\n\n  setPage = (page) => {\n    this.setState({ page }, function () {\n      this.updatePageData();\n    });\n  };\n\n  setRowsPerPage = (event) => {\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\n      this.updatePageData();\n    });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenLogDialog: false,\n    });\n  };\n\n  search() {\n    this.setState({ page: 0 }, function () {\n      var searchObject = {};\n      searchObject.keyword = this.state.keyword;\n      searchObject.pageIndex = this.state.page + 1;\n      searchObject.pageSize = this.state.rowsPerPage;\n      searchByPage(searchObject).then(({ data }) => {\n        this.setState({\n          activityLogList: [...data.content],\n          totalElements: data.totalElements,\n        });\n      });\n    });\n  }\n\n  handleTextChange = (event) => {\n    this.setState({ keyword: event.target.value }, function () {});\n  };\n\n  handleKeyDownEnterSearch = (e) => {\n    if (e.key === \"Enter\") {\n      this.search();\n    }\n  };\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  updatePageData = () => {\n    var searchObject = {};\n    searchObject.keyword = this.state.keyword;\n    searchObject.pageIndex = this.state.page + 1;\n    searchObject.pageSize = this.state.rowsPerPage;\n    searchByPage(searchObject).then(({ data }) => {\n      this.setState({\n        activityLogList: [...data.content],\n        totalElements: data.totalElements,\n      });\n    });\n  };\n\n  render() {\n    const { t, i18n } = this.props;\n    let {\n      rowsPerPage,\n      page,\n      totalElements,\n      shouldOpenLogDialog,\n      keyword,\n      log,\n    } = this.state;\n\n    let columns = [\n      {\n        title: t(\"ActivityLog.upload_time\"),\n        field: \"uploadTime\",\n        align: \"left\",\n        width: \"150\",\n        render: (rowData) => {\n          return (\n            <p>{moment(rowData.uploadTime).format(\"DD/MM/YYYY HH:MM:SS\")}</p>\n          );\n        },\n      },\n      { title: t(\"ActivityLog.file_name\"), field: \"fileName\", width: \"150\" },\n      {\n        title: t(\"ActivityLog.status\"),\n        field: \"status\",\n        align: \"left\",\n        width: \"150\",\n        render: (rowData) => {\n          switch (rowData.status) {\n            case SUCCESSFUL:\n              return t(\"ActivityLog.status_successful\");\n            case FAILED:\n              return t(\"ActivityLog.status_failed\");\n            default:\n              return \"\";\n          }\n        },\n      },\n      {\n        title: t(\"ActivityLog.log_detail\"),\n        field: \"logDetail\",\n        width: \"150\",\n        render: (rowData) => (\n          <MaterialButton\n            item={rowData}\n            onSelect={(rowData, method) => {\n              if (method === 0) {\n                this.setState({\n                  shouldOpenLogDialog: true,\n                  log: rowData.logDetail,\n                });\n              } else {\n                alert(\"Call Selected Here:\" + rowData.id);\n              }\n            }}\n          />\n        ),\n      },\n    ];\n\n    return (\n      <div className=\"m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Breadcrumb\n            routeSegments={[{ name: t(\"ActivityLog.activity_log\") }]}\n          />\n        </div>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              label={t(\"ActivityLog.search\")}\n              className=\"mb-16 mr-20\"\n              type=\"text\"\n              name=\"keyword\"\n              value={keyword}\n              onKeyDown={this.handleKeyDownEnterSearch}\n              onChange={this.handleTextChange}\n            />\n            <Button\n              className=\"mb-16 mr-16 align-bottom\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.search(keyword)}\n            >\n              <span style={{ marginRight: \"5px\" }}>{t(\"general.search\")}</span>\n              <Icon>search</Icon>\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Card className=\"w-100 overflow-auto\" elevation={6}>\n              <MaterialTable\n                title={t(\"ActivityLog.activity_log\")}\n                data={this.state.activityLogList}\n                columns={columns}\n                parentChildData={(row, rows) => {\n                  var list = rows.find((a) => a.id === row.parentId);\n                  return list;\n                }}\n                options={{\n                  selection: false,\n                  actionsColumnIndex: -1,\n                  paging: false,\n                  search: false,\n                }}\n                components={{\n                  Toolbar: (props) => <MTableToolbar {...props} />,\n                }}\n                onSelectionChange={(rows) => {\n                  this.data = rows;\n                }}\n                // actions={[\n                //   {\n                //     tooltip: 'Remove All Selected Users',\n                //     icon: 'delete',\n                //     onClick: (evt, data) => {\n                //       this.handleDeleteAll(data);\n                //       alert('You want to delete ' + data.length + ' rows');\n                //     }\n                //   },\n                // ]}\n              />\n              <TablePagination\n                className=\"px-16\"\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={totalElements}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                backIconButtonProps={{\n                  \"aria-label\": \"Previous Page\",\n                }}\n                nextIconButtonProps={{\n                  \"aria-label\": \"Next Page\",\n                }}\n                onChangePage={this.handleChangePage}\n                onChangeRowsPerPage={this.setRowsPerPage}\n              />\n            </Card>\n            <ShowDialog\n              title={t(\"ActivityLog.log_detail\")}\n              open={shouldOpenLogDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              text={log}\n              cancel={\"OK\"}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ActivityLogTable;\n"]},"metadata":{},"sourceType":"module"}