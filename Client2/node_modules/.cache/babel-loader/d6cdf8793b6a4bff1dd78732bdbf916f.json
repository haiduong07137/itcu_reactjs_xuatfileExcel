{"ast":null,"code":"import _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\sessions\\\\SignUp_RegisterAccount.jsx\";\nimport React, { Component } from \"react\";\nimport ConstantList from \"../../appConfig\";\nimport { Card, Checkbox, FormControlLabel, Grid, Button, Select, Input, InputLabel, FormControl, MenuItem, FormHelperText } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getAllEQARound, getAllHealthOrgType, signUpAccount, checkuserName, checkEmail } from \"./SessionService\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\n\nvar SignUp = /*#__PURE__*/function (_Component) {\n  _inherits(SignUp, _Component);\n\n  var _super = _createSuper(SignUp);\n\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      displayName: \"\",\n      userName: \"\",\n      gender: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n    _this.listGender = [{\n      id: 'M',\n      name: 'Nam'\n    }, {\n      id: 'F',\n      name: 'Nữ'\n    }, {\n      id: 'U',\n      name: 'Không rõ'\n    }];\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === 'switch') {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === 'changePass') {\n        _this.setState({\n          changePass: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === 'active') {\n        _this.setState({\n          active: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === 'displayName') {\n        var displayName = _this.state;\n        displayName = event.target.value;\n\n        _this.setState({\n          displayName: displayName\n        });\n\n        return;\n      }\n\n      if (source === 'gender') {\n        var gender = _this.state;\n        gender = event.target.value;\n\n        _this.setState({\n          gender: gender\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.openSelectDepartmentPopup = function () {\n      _this.setState({\n        shouldOpenSelectDepartmentPopup: true\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      var registerDto = {};\n      registerDto.email = _this.state.email;\n      registerDto.userName = _this.state.userName;\n      checkuserName(registerDto).then(function (result) {\n        if (result && result.data && result.data != '') {\n          alert('Email này đã được sử dụng.');\n        } else {\n          checkEmail(registerDto).then(function (result) {\n            if (result && result.data && result.data != '') {\n              alert('Email này đã được sử dụng.');\n            } else {\n              signUpAccount(_this.state).then(function (result) {\n                if (result != null && result.data != null && result.data != '') {\n                  if (result.data.hasEmail) {\n                    alert('Email này đã được sử dụng.');\n                  } else if (result.data.sendEmailFailed) {\n                    alert('Có lỗi khi gửi email thông báo đến email của bạn. Vui lòng thử lại.');\n                  } else {\n                    alert('Đăng ký thành công.');\n\n                    _this.props.history.push('/session/signin');\n                  }\n                } else {\n                  alert('Có lỗi xảy ra khi đăng ký.');\n                }\n              });\n            }\n          }, function (error) {\n            alert('Có lỗi xảy ra khi đăng ký.');\n          });\n        }\n      }, function (error) {\n        alert('Có lỗi xảy ra khi đăng ký.');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // custom rule will have name 'isPasswordMatch'\n      ValidatorForm.addValidationRule('isPasswordMatch', function (value) {\n        if (value !== _this2.state.password) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove rule when it is not needed\n      ValidatorForm.removeValidationRule('isPasswordMatch');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          handleOKEditClose = _this$props.handleOKEditClose,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          displayName = _this$state.displayName,\n          email = _this$state.email,\n          person = _this$state.person,\n          userName = _this$state.userName,\n          changePass = _this$state.changePass,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword,\n          gender = _this$state.gender;\n      var TitlePage = t(\"sign_up.title_form\");\n      return (\n        /*#__PURE__*/\n        // <div className=\"m-sm-30\">\n        //   <Helmet>\n        //     <title>{TitlePage} | {t('web_site')}</title>\n        //   </Helmet>\n        //   <div className=\"mb-sm-30\">\n        //     {/* <Breadcrumb routeSegments={[{ name: t('Product.title') }]} /> */}\n        //     <Breadcrumb routeSegments={[\n        //       { name: t(\"Dashboard.category\"),path: \"/list/product\" },\n        //        { name: TitlePage }]} />\n        //   </div>\n        // </div>\n        React.createElement(ValidatorForm, {\n          ref: \"form\",\n          onSubmit: this.handleFormSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"signup flex flex-center w-100 h-100vh\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-8\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: \"signup-card-customs position-relative y-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 2,\n          md: 2,\n          sm: 2,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-32 flex flex-center bg-light-gray flex-middle h-100\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"/assets/images/illustrations/posting_photo.svg\",\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }\n        }))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 10,\n          md: 10,\n          sm: 10,\n          xs: 12,\n          container: true,\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pt-36\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 23\n          }\n        }, t('sign_up.title_form')))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          container: true,\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TextValidator, {\n          className: \"w-100 mb-16\",\n          label: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 32\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 38\n            }\n          }, \"*\"), t('user.displayName')),\n          onChange: function onChange(displayName) {\n            return _this3.handleChange(displayName, 'displayName');\n          },\n          type: \"text\",\n          name: \"name\",\n          value: displayName,\n          validators: ['required'],\n          errorMessages: ['this field is required'],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FormControl, {\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(InputLabel, {\n          htmlFor: \"gender-simple\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }\n        }, t('user.gender')), /*#__PURE__*/React.createElement(Select, {\n          value: gender,\n          onChange: function onChange(gender) {\n            return _this3.handleChange(gender, 'gender');\n          },\n          inputProps: {\n            name: 'gender',\n            id: 'gender-simple'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }\n        }, this.listGender.map(function (item) {\n          return /*#__PURE__*/React.createElement(MenuItem, {\n            key: item.id,\n            value: item.id,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 31\n            }\n          }, item.name);\n        })))), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TextValidator, {\n          className: \"w-100 mb-16\",\n          label: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 32\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 38\n            }\n          }, \"*\"), t('user.username')),\n          onChange: this.handleChange,\n          type: \"text\",\n          name: \"userName\",\n          value: userName,\n          validators: ['required'],\n          errorMessages: ['this field is required'],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TextValidator, {\n          className: \"w-100 mb-16\",\n          label: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 32\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 38\n            }\n          }, \"*\"), t('user.email')),\n          onChange: this.handleChange,\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          validators: ['required', 'isEmail'],\n          errorMessages: ['This field is required', 'Email is not valid'],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TextValidator, {\n          className: \"mb-16 w-100\",\n          label: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 32\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 38\n            }\n          }, \"*\"), t('user.pass')) // label={t('password')}\n          ,\n          variant: \"outlined\",\n          onChange: this.handleChange,\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          validators: ['required'],\n          errorMessages: ['This field is required'],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 24\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TextValidator, {\n          className: \"mb-16 w-100\",\n          label: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 32\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 38\n            }\n          }, \"*\"), t('user.re_pass')) // label={t('re_password')}\n          ,\n          variant: \"outlined\",\n          onChange: this.handleChange,\n          name: \"confirmPassword\",\n          type: \"password\",\n          value: confirmPassword,\n          validators: ['required', 'isPasswordMatch'],\n          errorMessages: ['This field is required', 'Password mismatch'],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pl-36 pr-36 pb-36 h-100\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flex flex-middle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \"capitalize\",\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 27\n          }\n        }, t(\"sign_up.title\")), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"ml-16 mr-8\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 27\n          }\n        }, t(\"or\")), /*#__PURE__*/React.createElement(Button, {\n          className: \"capitalize\",\n          onClick: function onClick() {\n            return _this3.props.history.push(ConstantList.ROOT_PATH + \"session/signin\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 27\n          }\n        }, t(\"sign_in.title\"))))))))))))\n      );\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {// setUser: PropTypes.func.isRequired\n  };\n};\n\nexport default connect(mapStateToProps, {})(SignUp);","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/sessions/SignUp_RegisterAccount.jsx"],"names":["React","Component","ConstantList","Card","Checkbox","FormControlLabel","Grid","Button","Select","Input","InputLabel","FormControl","MenuItem","FormHelperText","ValidatorForm","TextValidator","getAllEQARound","getAllHealthOrgType","signUpAccount","checkuserName","checkEmail","connect","Helmet","SignUp","props","state","displayName","userName","gender","email","password","confirmPassword","listGender","id","name","handleChange","event","source","persist","setState","isActive","target","checked","changePass","active","value","openSelectDepartmentPopup","shouldOpenSelectDepartmentPopup","handleFormSubmit","registerDto","then","result","data","alert","hasEmail","sendEmailFailed","history","push","error","addValidationRule","removeValidationRule","open","handleClose","handleOKEditClose","t","i18n","person","TitlePage","color","map","item","ROOT_PATH","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ConstantList from \"../../appConfig\";\nimport {\n  Card,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Button,\n  Select,\n  Input,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  FormHelperText\n} from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getAllEQARound, getAllHealthOrgType, signUpAccount, checkuserName, checkEmail } from \"./SessionService\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    displayName: \"\",\n    userName: \"\",\n    gender: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  listGender = [\n      { id: 'M', name: 'Nam' },\n      { id: 'F', name: 'Nữ' },\n      { id: 'U', name: 'Không rõ' },\n    ]\n\n  handleChange = (event, source) => {\n    event.persist()\n    if (source === 'switch') {\n      this.setState({ isActive: event.target.checked })\n      return\n    }\n    if (source === 'changePass') {\n      this.setState({ changePass: event.target.checked })\n      return\n    }\n    if (source === 'active') {\n      this.setState({ active: event.target.checked })\n      return\n    }\n    if (source === 'displayName') {\n      let displayName = this.state;\n      displayName = event.target.value;\n      this.setState({ displayName: displayName })\n      return\n    }\n    if (source === 'gender') {\n      let gender = this.state;\n      gender = event.target.value;\n      this.setState({ gender: gender })\n      return\n    }\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n  openSelectDepartmentPopup = () => {\n    this.setState({\n      shouldOpenSelectDepartmentPopup: true,\n    })\n  }\n\n  handleFormSubmit = event => {\n    let registerDto = {};\n    registerDto.email = this.state.email;\n    registerDto.userName = this.state.userName;\n\n    checkuserName(registerDto).then((result) => {\n      if (result && result.data && result.data != '') {\n        alert('Email này đã được sử dụng.');\n      }\n      else {\n        checkEmail(registerDto).then((result) => {\n          if (result && result.data && result.data != '') {\n            alert('Email này đã được sử dụng.');\n          }\n          else {\n            signUpAccount(this.state).then((result) => {\n              if (result != null && result.data != null && result.data != '') {\n                if (result.data.hasEmail) {\n                  alert('Email này đã được sử dụng.');\n                }\n                else if (result.data.sendEmailFailed) {\n                  alert('Có lỗi khi gửi email thông báo đến email của bạn. Vui lòng thử lại.');\n                }\n                else {\n                  alert('Đăng ký thành công.');\n                  this.props.history.push('/session/signin');\n                }\n              }\n              else {\n                alert('Có lỗi xảy ra khi đăng ký.');\n              }\n            });\n          }\n        }, (error) => {\n          alert('Có lỗi xảy ra khi đăng ký.');\n        });\n      }\n    }, (error) => {\n      alert('Có lỗi xảy ra khi đăng ký.');\n    });\n  };\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n      if (value !== this.state.password) {\n        return false;\n      }\n      return true;\n    });\n  }\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule('isPasswordMatch');\n  }\n\n  render() {\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props\n    let {\n      displayName,\n      email,\n      person,\n      userName,\n      changePass,\n      password,\n      confirmPassword,\n      gender\n    } = this.state\n    let  TitlePage = t(\"sign_up.title_form\");\n    return (\n      // <div className=\"m-sm-30\">\n      //   <Helmet>\n      //     <title>{TitlePage} | {t('web_site')}</title>\n      //   </Helmet>\n      //   <div className=\"mb-sm-30\">\n      //     {/* <Breadcrumb routeSegments={[{ name: t('Product.title') }]} /> */}\n      //     <Breadcrumb routeSegments={[\n      //       { name: t(\"Dashboard.category\"),path: \"/list/product\" },\n      //        { name: TitlePage }]} />\n      //   </div>\n      // </div>\n      <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit} >\n        <div className=\"signup flex flex-center w-100 h-100vh\">\n          <div className=\"p-8\">\n            <Card className=\"signup-card-customs position-relative y-center\">\n              <Grid container>\n                <Grid item lg={2} md={2} sm={2} xs={12}>\n                  <div className=\"p-32 flex flex-center bg-light-gray flex-middle h-100\">\n                    <img\n                      src=\"/assets/images/illustrations/posting_photo.svg\"\n                      alt=\"\"\n                    />\n                  </div>\n                </Grid>\n                <Grid item lg={10} md={10} sm={10} xs={12} container spacing={2}>\n                  <Grid item lg={12} md={12} sm={12} xs={12}>\n                    <div className=\"pt-36\">\n                      <h4 className=\"text-center\">{t('sign_up.title_form')}</h4>\n                    </div>\n                  </Grid>\n                  <Grid item lg={12} md={12} sm={12} xs={12} container spacing={2}>\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\n                      <TextValidator\n                        className=\"w-100 mb-16\"\n                        label={<span><span style={{ color: \"red\" }}>*</span>{t('user.displayName')}</span>}\n                        onChange={(displayName) =>\n                          this.handleChange(displayName, 'displayName')\n                        }\n                        type=\"text\"\n                        name=\"name\"\n                        value={displayName}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                      />\n                    </Grid>\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\n                      <FormControl fullWidth={true}>\n                        <InputLabel htmlFor=\"gender-simple\">\n                          {t('user.gender')}\n                        </InputLabel>\n                        <Select\n                          value={gender}\n                          onChange={(gender) => this.handleChange(gender, 'gender')}\n                          inputProps={{\n                            name: 'gender',\n                            id: 'gender-simple',\n                          }}\n                        >\n                          {this.listGender.map((item) => {\n                            return (\n                              <MenuItem key={item.id} value={item.id}>\n                                {item.name}\n                              </MenuItem>\n                            )\n                          })}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\n                      <TextValidator\n                        className=\"w-100 mb-16\"\n                        label={<span><span style={{ color: \"red\" }}>*</span>{t('user.username')}</span>}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                        name=\"userName\"\n                        value={userName}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                      />\n                    </Grid>\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\n                      <TextValidator\n                        className=\"w-100 mb-16\"\n                        label={<span><span style={{color:\"red\"}}>*</span>{t('user.email')}</span>}\n                        \n                        onChange={this.handleChange}\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        validators={['required', 'isEmail']}\n                        errorMessages={[\n                          'This field is required',\n                          'Email is not valid',\n                        ]}\n                      />\n                    </Grid>\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\n                       <TextValidator\n                        className=\"mb-16 w-100\"\n                        label={<span><span style={{color:\"red\"}}>*</span>{t('user.pass')}</span>}\n\n                        // label={t('password')}\n                        variant=\"outlined\"\n                        onChange={this.handleChange}\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        validators={['required']}\n                        errorMessages={['This field is required']}\n                      />\n                    </Grid>\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\n                      <TextValidator\n                        className=\"mb-16 w-100\"\n                        label={<span><span style={{color:\"red\"}}>*</span>{t('user.re_pass')}</span>}\n\n                        // label={t('re_password')}\n                        variant=\"outlined\"\n                        onChange={this.handleChange}\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        value={confirmPassword}\n                        validators={['required', 'isPasswordMatch']}\n                        errorMessages={[\n                          'This field is required',\n                          'Password mismatch',\n                        ]}\n                      />\n                    </Grid>\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\n                      <div className=\"pl-36 pr-36 pb-36 h-100\">\n                        <div className=\"flex flex-middle\">\n                          <Button\n                            className=\"capitalize\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                          >\n                            {t(\"sign_up.title\")}\n                          </Button>\n                          <span className=\"ml-16 mr-8\">{t(\"or\")}</span>\n                          <Button\n                            className=\"capitalize\"\n                            onClick={() =>\n                              this.props.history.push(ConstantList.ROOT_PATH + \"session/signin\")\n                            }\n                          >\n                            {t(\"sign_in.title\")}\n                          </Button>\n                        </div>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          </div>\n        </div>\n      </ValidatorForm>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  // setUser: PropTypes.func.isRequired\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}