{"ast":null,"code":"import _toArray from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toArray\";\nimport _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\calendar\\\\EventTable.jsx\";\nimport React from 'react'; //import * as dates from 'date-arithmetic'\n\nimport events from './events';\nimport { Calendar, Views, Navigate } from 'react-big-calendar';\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid';\nimport { inRange } from 'react-big-calendar/lib/utils/eventLevels';\nimport { isSelected } from 'react-big-calendar/lib/utils/selection';\nimport * as dates from 'react-big-calendar/lib/utils/dates';\nimport addClass from 'dom-helpers/addClass';\nimport removeClass from 'dom-helpers/removeClass';\nimport getWidth from 'dom-helpers/width';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { saveAs } from 'file-saver';\nimport { getAllAdministrativeUnits, deleteAdministrativeUnit } from \"../AdministrativeUnit/AdministrativeUnitService\";\nimport AdministrativeUnitEditorDialog from \"../AdministrativeUnit/AdministrativeUnitEditorDialog\";\nimport { getListEventByWeek, deleteEvent } from './CalendarService';\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\nimport moment from \"moment\";\nimport Paper from '@material-ui/core/Paper';\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, TableContainer, Button, Card, Checkbox } from \"@material-ui/core\";\n\nvar EventTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(EventTable, _React$Component);\n\n  var _super = _createSuper(EventTable);\n\n  function EventTable(props) {\n    var _this;\n\n    _classCallCheck(this, EventTable);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      events: [],\n      item: {},\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      eventDateList: [],\n      date: {},\n      selectAllItem: false\n    };\n\n    _this.handleClick = function (event, item) {\n      var eventDateList = _this.props.eventDateList;\n\n      if (item.checked == null) {\n        item.checked = true;\n      } else {\n        item.checked = !item.checked;\n      }\n\n      var selectAllItem = true;\n\n      for (var i = 0; i < eventDateList.length; i++) {\n        var events = eventDateList[i].events;\n\n        for (var j = 0; j < events.length; j++) {\n          if (events[j].checked == null || events[j].checked == false) {\n            selectAllItem = false;\n          }\n\n          if (events[j].id == item.id) {\n            events[j] = item;\n          }\n        }\n      }\n\n      _this.setState({\n        selectAllItem: selectAllItem,\n        eventDateList: eventDateList\n      });\n    };\n\n    _this.handleSelectAllClick = function (event) {\n      var eventDateList = _this.props.eventDateList;\n\n      for (var i = 0; i < eventDateList.length; i++) {\n        var events = eventDateList[i].events;\n\n        for (var j = 0; j < events.length; j++) {\n          events[j].checked = !_this.state.selectAllItem;\n        }\n      }\n\n      _this.setState({\n        selectAllItem: !_this.state.selectAllItem,\n        eventDateList: eventDateList\n      });\n    };\n\n    _this.headerRef = React.createRef();\n    _this.dateColRef = React.createRef();\n    _this.timeColRef = React.createRef();\n    _this.contentRef = React.createRef();\n    _this.tbodyRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(EventTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          date = _this$props.date,\n          events = _this$props.events,\n          eventDateList = _this$props.eventDateList;\n      this.setState({\n        events: events,\n        eventDateList: eventDateList\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n,\n          date = _this$props2.date,\n          events = _this$props2.events;\n      var strDate = moment(date).format('YYYY-MM-DD');\n    }\n  }, {\n    key: \"renderEventAction\",\n    value: function renderEventAction(event) {\n      var _this$props3 = this.props,\n          onSelectEvent = _this$props3.onSelectEvent,\n          handleDelete = _this$props3.handleDelete;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: function onClick() {\n          return onSelectEvent(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: function onClick() {\n          return handleDelete(event.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, \"delete\")));\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"renderCells\",\n    value: function renderCells(item, isRenderAction, isAdminView) {\n      var _this$props4 = this.props,\n          onSelectEvent = _this$props4.onSelectEvent,\n          handleDelete = _this$props4.handleDelete,\n          handleClick = _this$props4.handleClick;\n\n      if (item == null) {\n        item = {};\n      }\n\n      var titleCell = /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, item.title);\n      var chairmanCell = /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 5\n        }\n      }, item.chairman);\n      var actionCell = /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0 border-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, isRenderAction ? this.renderEventAction(item) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 54\n        }\n      })));\n      var checkBoxCell = /*#__PURE__*/React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }\n      }, isRenderAction ? /*#__PURE__*/React.createElement(Checkbox, {\n        onClick: function onClick(event) {\n          return handleClick(event, item);\n        },\n        checked: item.checked != null ? item.checked : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 119\n        }\n      }));\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, titleCell, chairmanCell, isAdminView && actionCell, isAdminView && checkBoxCell);\n    }\n  }, {\n    key: \"renderEvent\",\n    value: function renderEvent(item, isRenderAction, isAdminView) {\n      // let {onSelectEvent,handleDelete,handleClick} = this.props;\n      // if(item==null){\n      //   item={};\n      // }\n      // let titleCell = <TableCell className=\"px-0\" align=\"left\">\n      //                     {item.title}\n      //                   </TableCell>\n      // let chairmanCell=\n      // <TableCell className=\"px-0\" align=\"left\">\n      //     {item.chairman}\n      // </TableCell>;\n      // let actionCell=\n      // <TableCell className=\"px-0\" align=\"left\">\n      //   <TableCell className=\"px-0 border-none\">\n      //       {this.renderEventAction(item)}        \n      //   </TableCell>\n      // </TableCell>\n      // let checkBoxCell=\n      // <TableCell padding=\"checkbox\">\n      //     <Checkbox onClick={(event) => handleClick(event, item)} checked={item.checked!=null?item.checked:false}/>\n      // </TableCell>    \n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, this.renderCells(item, isRenderAction, isAdminView)));\n    }\n  }, {\n    key: \"renderDateEvent\",\n    value: function renderDateEvent(eventDate, isAdminView) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          onSelectEvent = _this$props5.onSelectEvent,\n          handleDelete = _this$props5.handleDelete,\n          handleClick = _this$props5.handleClick,\n          onAddNewClick = _this$props5.onAddNewClick;\n      var events = [];\n      var firstEvent = {};\n      var isRenderAction = false;\n\n      if (eventDate.events.length > 0) {\n        firstEvent = eventDate.events[0];\n        isRenderAction = true;\n      }\n\n      for (var i = 1; i < eventDate.events.length; i++) {\n        events.push(eventDate.events[i]);\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        key: shortid.generate(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        rowSpan: eventDate.events.length > 1 ? eventDate.events.length : 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, eventDate.name, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }), moment(eventDate.date).format('YYYY-MM-DD'), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }), isAdminView && /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return onAddNewClick(eventDate.date);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, \"add_circle\"))), this.renderCells(firstEvent, isRenderAction, isAdminView)), events.map(function (event, index) {\n        return _this2.renderEvent(event, true, isAdminView);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props6 = this.props,\n          t = _this$props6.t,\n          i18n = _this$props6.i18n,\n          date = _this$props6.date,\n          eventDateList = _this$props6.eventDateList,\n          handleOKClose = _this$props6.handleOKClose,\n          events = _this$props6.events,\n          handleClick = _this$props6.handleClick,\n          selectAllItem = _this$props6.selectAllItem,\n          handleSelectAllClick = _this$props6.handleSelectAllClick,\n          isAdminView = _this$props6.isAdminView; //alert(events.length);\n\n      var unixTimestamp = moment(date).unix();\n      var strDate = moment(date).format('YYYY-MM-DD');\n      var _this$state = this.state,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          administrativeList = _this$state.administrativeList,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableContainer, {\n        style: {\n          maxHeight: 1000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, \"Ng\\xE0y/Th\\xE1ng\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }, \"N\\u1ED9i dung\"), /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          width: \"40%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, \"Ch\\u1EE7 tr\\xEC\"), isAdminView && /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 31\n        }\n      }, \"Thao t\\xE1c\"), isAdminView && /*#__PURE__*/React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: selectAllItem,\n        onChange: handleSelectAllClick,\n        inputProps: {\n          'aria-label': 'select all desserts'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, eventDateList.map(function (eventDate, index) {\n        return _this3.renderDateEvent(eventDate, isAdminView);\n      }))), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: \"Are you sure to delete?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return EventTable;\n}(React.Component);\n\nEventTable.range = function (date, _ref) {\n  var localizer = _ref.localizer;\n  var firstOfWeek = localizer.startOfWeek();\n  var start = dates.startOf(date, 'week', firstOfWeek);\n  var end = dates.endOf(date, 'week', firstOfWeek);\n  return dates.range(start, end);\n};\n\nEventTable.navigate = function (date, action) {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      {\n        return dates.add(date, -1, 'week');\n      }\n\n    case Navigate.NEXT:\n      return dates.add(date, 1, 'week');\n\n    default:\n      return date;\n  }\n};\n\nEventTable.title = function (date, _ref2) {\n  var localizer = _ref2.localizer;\n\n  var _EventTable$range = EventTable.range(date, {\n    localizer\n  }),\n      _EventTable$range2 = _toArray(_EventTable$range),\n      start = _EventTable$range2[0],\n      rest = _EventTable$range2.slice(1);\n\n  return localizer.format({\n    start,\n    end: rest.pop()\n  }, 'dayRangeHeaderFormat');\n};\n\nexport default EventTable;","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/calendar/EventTable.jsx"],"names":["React","events","Calendar","Views","Navigate","TimeGrid","inRange","isSelected","dates","addClass","removeClass","getWidth","scrollbarSize","saveAs","getAllAdministrativeUnits","deleteAdministrativeUnit","AdministrativeUnitEditorDialog","getListEventByWeek","deleteEvent","Breadcrumb","ConfirmationDialog","shortid","moment","Paper","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","TableContainer","Button","Card","Checkbox","EventTable","props","state","rowsPerPage","page","item","shouldOpenEditorDialog","shouldOpenConfirmationDialog","eventDateList","date","selectAllItem","handleClick","event","checked","i","length","j","id","setState","handleSelectAllClick","headerRef","createRef","dateColRef","timeColRef","contentRef","tbodyRef","t","i18n","strDate","format","onSelectEvent","handleDelete","value","target","isRenderAction","isAdminView","titleCell","title","chairmanCell","chairman","actionCell","renderEventAction","checkBoxCell","renderCells","eventDate","onAddNewClick","firstEvent","push","generate","name","map","index","renderEvent","handleOKClose","unixTimestamp","unix","administrativeList","maxHeight","width","renderDateEvent","handleDialogClose","handleConfirmationResponse","Component","range","localizer","firstOfWeek","startOfWeek","start","startOf","end","endOf","navigate","action","PREVIOUS","add","NEXT","rest","pop"],"mappings":"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","sourcesContent":["import React from 'react'\n\n//import * as dates from 'date-arithmetic'\n\nimport events from './events'\nimport { Calendar, Views, Navigate } from 'react-big-calendar'\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid'\nimport { inRange } from 'react-big-calendar/lib/utils/eventLevels'\nimport { isSelected } from 'react-big-calendar/lib/utils/selection'\nimport * as dates from 'react-big-calendar/lib/utils/dates'\nimport addClass from 'dom-helpers/addClass'\nimport removeClass from 'dom-helpers/removeClass'\nimport getWidth from 'dom-helpers/width'\nimport scrollbarSize from 'dom-helpers/scrollbarSize'\nimport { saveAs } from 'file-saver';\nimport { getAllAdministrativeUnits, deleteAdministrativeUnit } from \"../AdministrativeUnit/AdministrativeUnitService\";\nimport AdministrativeUnitEditorDialog from \"../AdministrativeUnit/AdministrativeUnitEditorDialog\";\nimport {getListEventByWeek,deleteEvent} from './CalendarService';\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\nimport moment from \"moment\";\nimport Paper from '@material-ui/core/Paper';\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination,\n  TableContainer,\n  Button,\n  Card,\n  Checkbox \n} from \"@material-ui/core\";\n\nclass EventTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.headerRef = React.createRef()\n    this.dateColRef = React.createRef()\n    this.timeColRef = React.createRef()\n    this.contentRef = React.createRef()\n    this.tbodyRef = React.createRef()\n  }\n  state = {\n    rowsPerPage: 10,\n    page: 0,\n    events:[],\n    item:{},\n    shouldOpenEditorDialog: false,\n    shouldOpenConfirmationDialog: false,\n    eventDateList:[],\n    date:{},\n    selectAllItem:false\n  };  \n  componentDidMount() {\n    let { t, i18n,date,events,eventDateList } = this.props;\n    this.setState({events:events,eventDateList:eventDateList});\n  }\n\n  componentDidUpdate() {\n    const { t, i18n,date,events } = this.props;\n    var strDate = moment(date).format('YYYY-MM-DD');\n  }\n  renderEventAction(event){\n    let {onSelectEvent,handleDelete} = this.props;\n    return <React.Fragment>\n      <IconButton onClick={() =>onSelectEvent(event)}>\n          <Icon color=\"primary\">edit</Icon>\n      </IconButton>\n      <IconButton onClick={() => handleDelete(event.id)}>\n        <Icon color=\"error\">delete</Icon>\n    </IconButton>\n    </React.Fragment>;\n  }\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n  renderCells(item, isRenderAction, isAdminView){\n    let {onSelectEvent,handleDelete,handleClick} = this.props;\n    if(item==null){\n      item={};\n    }\n    let titleCell = <TableCell className=\"px-0\" align=\"left\">\n                        {item.title}\n                      </TableCell>\n    let chairmanCell=\n    <TableCell className=\"px-0\" align=\"left\">\n        {item.chairman}\n    </TableCell>;\n    let actionCell=\n    <TableCell className=\"px-0\" align=\"left\">\n      <TableCell className=\"px-0 border-none\">\n        {isRenderAction?this.renderEventAction(item):<React.Fragment></React.Fragment>}        \n      </TableCell>\n    </TableCell>\n    let checkBoxCell=\n    <TableCell padding=\"checkbox\">\n        {isRenderAction?\n            <Checkbox onClick={(event) => handleClick(event, item)} checked={item.checked!=null?item.checked:false}/>:<React.Fragment></React.Fragment>\n        }        \n    </TableCell>\n    return (\n      <React.Fragment>\n        {titleCell}\n        {chairmanCell}\n        {isAdminView && actionCell}\n        {isAdminView && checkBoxCell}\n      </React.Fragment>\n      )\n  }\n  renderEvent (item, isRenderAction,isAdminView){\n    // let {onSelectEvent,handleDelete,handleClick} = this.props;\n    // if(item==null){\n    //   item={};\n    // }\n    // let titleCell = <TableCell className=\"px-0\" align=\"left\">\n    //                     {item.title}\n    //                   </TableCell>\n    // let chairmanCell=\n    // <TableCell className=\"px-0\" align=\"left\">\n    //     {item.chairman}\n    // </TableCell>;\n    // let actionCell=\n    // <TableCell className=\"px-0\" align=\"left\">\n    //   <TableCell className=\"px-0 border-none\">\n    //       {this.renderEventAction(item)}        \n    //   </TableCell>\n    // </TableCell>\n    // let checkBoxCell=\n    // <TableCell padding=\"checkbox\">\n    //     <Checkbox onClick={(event) => handleClick(event, item)} checked={item.checked!=null?item.checked:false}/>\n    // </TableCell>    \n    return (\n      <React.Fragment>\n        <TableRow>\n          {/* {titleCell}\n          {chairmanCell}\n          {actionCell}\n          {checkBoxCell} */}\n          {this.renderCells(item,isRenderAction,isAdminView)}\n        </TableRow>\n      </React.Fragment>\n      )\n     }\n  renderDateEvent (eventDate,isAdminView){\n    let {onSelectEvent,handleDelete,handleClick, onAddNewClick} = this.props;\n    var events = [];\n    var firstEvent = {};\n    var isRenderAction=false;\n    if(eventDate.events.length>0){\n      firstEvent =eventDate.events[0];\n      isRenderAction=true;\n    }\n    for(var i=1;i<eventDate.events.length;i++){\n      events.push(eventDate.events[i]);\n    }\n    return(\n      <React.Fragment>\n      <TableRow key={shortid.generate()}>\n          <TableCell className=\"px-0\"  rowSpan={eventDate.events.length>1?eventDate.events.length:1}>\n            {eventDate.name}\n            <br/>\n            {moment(eventDate.date).format('YYYY-MM-DD')}\n            <br/>\n            {isAdminView&&<IconButton color=\"primary\" onClick={()=>onAddNewClick(eventDate.date)}>\n              <Icon>add_circle</Icon>\n            </IconButton>          \n            }\n          </TableCell>\n          {this.renderCells(firstEvent,isRenderAction,isAdminView)}\n      </TableRow>   \n      {events.map((event, index) =>this.renderEvent(event,true,isAdminView))}\n      </React.Fragment>       \n    )\n  }\n  handleClick = (event, item) => {\n    let eventDateList =  this.props.eventDateList;\n    if(item.checked==null){\n      item.checked=true;\n    }else {\n      item.checked=!item.checked;\n    }\n    var selectAllItem=true;\n    for(var i=0;i<eventDateList.length;i++){\n      var events=eventDateList[i].events;\n      for(var j=0;j<events.length;j++){\n        if(events[j].checked==null || events[j].checked==false){\n          selectAllItem=false;\n        }\n        if(events[j].id==item.id){\n          events[j]=item;\n        }\n      }\n    }\n    this.setState({selectAllItem:selectAllItem, eventDateList:eventDateList});\n  };\n\n  handleSelectAllClick = (event) => {\n    let eventDateList =  this.props.eventDateList;\n    for(var i=0;i<eventDateList.length;i++){\n      var events=eventDateList[i].events;\n      for(var j=0;j<events.length;j++){\n        events[j].checked=!this.state.selectAllItem;\n      }\n    }\n    this.setState({selectAllItem:!this.state.selectAllItem, eventDateList:eventDateList});\n  };   \n  render() {\n    const { t, i18n,date,eventDateList,handleOKClose,events,handleClick,selectAllItem,handleSelectAllClick,isAdminView } = this.props;\n    //alert(events.length);\n    var unixTimestamp = moment(date).unix();\n    var strDate = moment(date).format('YYYY-MM-DD');\n    let {\n      rowsPerPage,\n      page,\n      administrativeList,\n      shouldOpenConfirmationDialog,\n      shouldOpenEditorDialog\n    } = this.state;\n    \n    return (\n      <div>\n        <Paper>\n        <TableContainer style={{maxHeight: 1000}}>\n        <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Ngày/Tháng</TableCell>\n                <TableCell>Nội dung</TableCell>\n                <TableCell style={{width:\"40%\"}}>Chủ trì</TableCell>\n                {isAdminView&&<TableCell>Thao tác</TableCell>}\n                {isAdminView&&<TableCell padding=\"checkbox\">\n                  <Checkbox\n                      checked={selectAllItem}\n                      onChange={handleSelectAllClick}\n                      inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                }\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                eventDateList.map((eventDate, index) =>this.renderDateEvent(eventDate,isAdminView))\n              }\n            </TableBody>\n            </Table>\n          {shouldOpenConfirmationDialog && (\n            <ConfirmationDialog\n              open={shouldOpenConfirmationDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponse}\n              text=\"Are you sure to delete?\"\n            />\n          )}\n        </TableContainer>\n        </Paper>\n      </div>\n    )   \n    }\n  }\n\nEventTable.range = (date, { localizer }) => {\n    let firstOfWeek = localizer.startOfWeek();\n    \n    let start = dates.startOf(date, 'week', firstOfWeek)\n    let end = dates.endOf(date, 'week', firstOfWeek)\n    return dates.range(start, end)\n  }\n  \n\nEventTable.navigate = (date, action) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      {        \n        return dates.add(date, -1, 'week')\n      }\n    case Navigate.NEXT:\n      return dates.add(date, 1, 'week')\n\n    default:\n      return date\n  }\n}\n\nEventTable.title = (date, { localizer }) => {\n  let [start, ...rest] = EventTable.range(date, { localizer })\n  return localizer.format({ start, end: rest.pop() }, 'dayRangeHeaderFormat')\n}\nexport default EventTable;\n"]},"metadata":{},"sourceType":"module"}