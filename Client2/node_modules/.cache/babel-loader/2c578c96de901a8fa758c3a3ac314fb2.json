{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\calendar\\\\EgretCalendar.jsx\";\nimport React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { Calendar, Views, momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport CalendarHeader from \"./CalendarHeader\";\nimport * as ReactDOM from \"react-dom\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { getAllEvents, updateEvent, getListEventByWeek, deleteEvent, deleteAllEvent, publishAllEvent, approveAllEvent } from \"./CalendarService\";\nimport EventEditorDialog from \"./EventEditorDialog\";\nimport MyWeek from './MyWeek';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport EventTable from './EventTable';\nimport 'moment/locale/vi';\nimport CrudTable from '../CRUD/CrudTable';\nvar localizer = momentLocalizer(moment);\nmoment.locale('vi', {\n  week: {\n    dow: 1,\n    doy: 1\n  }\n});\nvar DragAndDropCalendar = withDragAndDrop(Calendar);\nvar viewList = Object.keys(Views).map(function (key) {\n  return Views[key];\n});\nvar ViewEventTable = withTranslation()(EventTable);\n\nvar EgretCalendar = /*#__PURE__*/function (_Component) {\n  _inherits(EgretCalendar, _Component);\n\n  var _super = _createSuper(EgretCalendar);\n\n  function EgretCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, EgretCalendar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      events: [],\n      shouldShowEventDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldDeleteAllConfirmationDialog: false,\n      newEvent: null,\n      culture: \"vi\",\n      date: new Date(),\n      eventDateList: [],\n      selectAllItem: false,\n      askMesssage: '',\n      confirmType: 1,\n      isAdminView: true\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        selectAllItem: false,\n        shouldShowEventDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldDeleteAllConfirmationDialog: false\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id: id,\n        askMesssage: 'deleteQuestion',\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleApprove = function () {\n      _this.setState({\n        confirmType: 2,\n        askMesssage: 'approveQuestion',\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handlePublish = function () {\n      _this.setState({\n        confirmType: 3,\n        askMesssage: 'publishQuestion',\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleOKClose = function () {\n      _this.updateCalendar();\n\n      _this.handleDialogClose();\n    };\n\n    _this.handleConfirmationResponse = function () {\n      if (_this.state.confirmType == 1) {\n        deleteEvent(_this.state.id).then(function () {\n          _this.updateCalendar();\n\n          _this.handleDialogClose();\n        });\n      } else if (_this.state.confirmType == 2) {\n        var list = [];\n\n        for (var i = 0; i < _this.state.eventDateList.length; i++) {\n          var events = _this.state.eventDateList[i].events;\n\n          for (var j = 0; j < events.length; j++) {\n            if (events[j].checked != null && events[j].checked) {\n              list.push(events[j]);\n            }\n          }\n        }\n\n        approveAllEvent(list).then(function () {\n          _this.updateCalendar();\n\n          _this.handleDialogClose();\n        });\n      } else if (_this.state.confirmType == 3) {\n        var list = [];\n\n        for (var i = 0; i < _this.state.eventDateList.length; i++) {\n          var events = _this.state.eventDateList[i].events;\n\n          for (var j = 0; j < events.length; j++) {\n            if (events[j].checked != null && events[j].checked) {\n              list.push(events[j]);\n            }\n          }\n        }\n\n        publishAllEvent(list).then(function () {\n          _this.updateCalendar();\n\n          _this.handleDialogClose();\n        });\n      }\n    };\n\n    _this.handleDeleteAllResponse = function () {\n      var numberCheckedItem = 0;\n      var list = [];\n\n      for (var i = 0; i < _this.state.eventDateList.length; i++) {\n        var events = _this.state.eventDateList[i].events;\n\n        for (var j = 0; j < events.length; j++) {\n          if (events[j].checked != null && events[j].checked) {\n            numberCheckedItem++;\n            list.push(events[j]);\n          }\n        }\n      }\n\n      deleteAllEvent(list).then(function () {\n        _this.updateCalendar();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleEventMove = function (event) {\n      _this.handleEventResize(event);\n    };\n\n    _this.handleEventResize = function (event) {\n      updateEvent(event).then(function () {\n        _this.updateCalendar();\n      });\n    };\n\n    _this.openNewEventDialog = function (_ref) {\n      var action = _ref.action,\n          event = _objectWithoutProperties(_ref, [\"action\"]);\n\n      if (action === \"doubleClick\") {\n        _this.setState({\n          newEvent: event,\n          shouldShowEventDialog: true\n        });\n      }\n    };\n\n    _this.openExistingEventDialog = function (event) {\n      _this.setState({\n        newEvent: event,\n        shouldShowEventDialog: true\n      });\n    };\n\n    _this.getListEventDate = function (date) {\n      var strDate = moment(date).format('YYYY-MM-DD');\n      getListEventByWeek(strDate).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this.setState({\n          eventDateList: data\n        });\n\n        var listEvents = [];\n\n        for (var j = 0; j < data.length; j++) {\n          var eventDate = data[j];\n\n          for (var i = 0; i < eventDate.events.length; i++) {\n            eventDate.events[i].checked = false;\n            listEvents.push(eventDate.events[i]);\n          }\n        }\n\n        return listEvents;\n      }).then(function (listEvents) {\n        _this.setState({\n          events: listEvents\n        });\n      });\n    };\n\n    _this.handleNavigate = function (date, view) {\n      _this.setState({\n        date: date\n      }, function () {\n        _this.updateCalendar();\n      });\n    };\n\n    _this.handleOnViewChange = function (view) {\n      alert('handleOnViewChange:' + _this.state.date);\n    };\n\n    _this.onAddNewClick = function (date) {\n      //    alert(date);\n      _this.openNewEventDialog({\n        action: \"doubleClick\",\n        startTime: date,\n        endTime: date\n      });\n    };\n\n    _this.handleAdminModeChange = function () {\n      _this.setState({\n        isAdminView: !_this.state.isAdminView\n      });\n    };\n\n    _this.handleClick = function (event, item) {\n      var eventDateList = _this.state.eventDateList;\n\n      if (item.checked == null) {\n        item.checked = true;\n      } else {\n        item.checked = !item.checked;\n      }\n\n      var selectAllItem = true;\n\n      for (var i = 0; i < eventDateList.length; i++) {\n        var events = eventDateList[i].events;\n\n        for (var j = 0; j < events.length; j++) {\n          if (events[j].checked == null || events[j].checked == false) {\n            selectAllItem = false;\n          }\n\n          if (events[j].id == item.id) {\n            events[j] = item;\n          }\n        }\n      }\n\n      _this.setState({\n        selectAllItem: selectAllItem,\n        eventDateList: eventDateList\n      });\n    };\n\n    _this.handleSelectAllClick = function (event) {\n      var eventDateList = _this.state.eventDateList;\n\n      for (var i = 0; i < eventDateList.length; i++) {\n        var events = eventDateList[i].events;\n\n        for (var j = 0; j < events.length; j++) {\n          events[j].checked = !_this.state.selectAllItem;\n        }\n      }\n\n      _this.setState({\n        selectAllItem: !_this.state.selectAllItem,\n        eventDateList: eventDateList\n      });\n    };\n\n    _this.headerComponentRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(EgretCalendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateCalendar();\n    }\n  }, {\n    key: \"updateCalendar\",\n    value: function () {\n      var _updateCalendar = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.getListEventDate(this.state.date);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateCalendar() {\n        return _updateCalendar.apply(this, arguments);\n      }\n\n      return updateCalendar;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          events = _this$state.events,\n          newEvent = _this$state.newEvent,\n          shouldShowEventDialog = _this$state.shouldShowEventDialog,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          culture = _this$state.culture,\n          eventDateList = _this$state.eventDateList,\n          shouldDeleteAllConfirmationDialog = _this$state.shouldDeleteAllConfirmationDialog;\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var formats = {\n        timeGutterFormat: 'HH:mm',\n        monthHeaderFormat: 'MM-YYYY',\n        dayHeaderFormat: function dayHeaderFormat(_ref3, culture, local) {\n          var start = _ref3.start,\n              end = _ref3.end;\n          return 'Ngày :' + local.format(start, 'DD/MM/YYYY', culture);\n        },\n        dayRangeHeaderFormat: function dayRangeHeaderFormat(_ref4, culture, local) {\n          var start = _ref4.start,\n              end = _ref4.end;\n          return local.format(start, 'DD/MM/YYYY', culture) + '-' + local.format(end, 'DD/MM/YYYY', culture);\n        },\n        eventTimeRangeFormat: function eventTimeRangeFormat(_ref5, culture, local) {\n          var start = _ref5.start,\n              end = _ref5.end;\n          return local.format(start, 'HH:mm', culture) + '-' + local.format(end, 'HH:mm', culture);\n        },\n        //dayFormat: 'MM-DD' + ' ' + '星期' + 'dd',\n        agendaTimeRangeFormat: function agendaTimeRangeFormat(_ref6, culture, local) {\n          var start = _ref6.start,\n              end = _ref6.end;\n          return local.format(start, 'HH:mm', culture) + '-' + local.format(end, 'HH:mm', culture);\n        } //agendaDateFormat: 'MM-DD' + ' ' + '星期' + 'dd',\n\n      };\n\n      if (eventDateList == null) {\n        eventDateList = [];\n      }\n\n      return this.state.events && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: \"Calendar\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.openNewEventDialog({\n            action: \"doubleClick\",\n            start: new Date(),\n            end: new Date()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }, \"Add Event\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.setState({\n            shouldDeleteAllConfirmationDialog: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }\n      }, t('Delete')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.handleApprove();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, t('Approve')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.handlePublish();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }\n      }, t('Publish')), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.headerComponentRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(DragAndDropCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: this.state.events,\n        onEventDrop: this.handleEventMove,\n        resizable: true,\n        onEventResize: this.handleEventResize,\n        defaultView: Views.WORK_WEEK,\n        defaultDate: new Date(),\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        t: t,\n        formats: formats,\n        culture: this.state.culture //views={viewList}\n        ,\n        views: {\n          work_week: EventTable,\n          month: true,\n          week: true,\n          day: true,\n          agenda: true\n        },\n        step: 60,\n        showMultiDayTimes: true,\n        handleDelete: this.handleDelete,\n        components: {\n          toolbar: function toolbar(props) {\n            return /*#__PURE__*/React.createElement(CalendarHeader, Object.assign({}, props, {\n              t: t,\n              handleAdminModeChange: _this2.handleAdminModeChange,\n              isAdminView: _this2.state.isAdminView,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 24\n              }\n            }));\n          }\n        },\n        selectAllItem: this.state.selectAllItem,\n        eventDateList: this.state.eventDateList,\n        onNavigate: this.handleNavigate,\n        onView: this.handleOnViewChange,\n        handleEventMove: this.handleEventMove,\n        onSelectEvent: function onSelectEvent(event) {\n          _this2.openExistingEventDialog(event);\n        },\n        onSelectSlot: function onSelectSlot(slotDetails) {\n          return _this2.openNewEventDialog(slotDetails);\n        },\n        handleOKClose: this.handleOKClose,\n        style: {\n          minHeight: 800\n        },\n        handleClick: this.handleClick,\n        handleSelectAllClick: this.handleSelectAllClick,\n        isAdminView: this.state.isAdminView,\n        onAddNewClick: this.onAddNewClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }\n      })), shouldShowEventDialog && /*#__PURE__*/React.createElement(EventEditorDialog, {\n        handleClose: this.handleDialogClose,\n        open: shouldShowEventDialog,\n        handleOKClose: this.handleOKClose,\n        event: newEvent,\n        t: t,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t(this.state.askMesssage),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }\n      }), shouldDeleteAllConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: this.state.shouldDeleteAllConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAllResponse,\n        text: t(\"Are you sure to delete all?\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return EgretCalendar;\n}(Component);\n\nexport default EgretCalendar;","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/calendar/EgretCalendar.jsx"],"names":["React","Component","Button","Calendar","Views","momentLocalizer","withDragAndDrop","moment","CalendarHeader","ReactDOM","Breadcrumb","ConfirmationDialog","getAllEvents","updateEvent","getListEventByWeek","deleteEvent","deleteAllEvent","publishAllEvent","approveAllEvent","EventEditorDialog","MyWeek","useTranslation","withTranslation","Trans","EventTable","CrudTable","localizer","locale","week","dow","doy","DragAndDropCalendar","viewList","Object","keys","map","key","ViewEventTable","EgretCalendar","props","state","events","shouldShowEventDialog","shouldOpenConfirmationDialog","shouldDeleteAllConfirmationDialog","newEvent","culture","date","Date","eventDateList","selectAllItem","askMesssage","confirmType","isAdminView","handleDialogClose","setState","handleDelete","id","handleApprove","handlePublish","handleOKClose","updateCalendar","handleConfirmationResponse","then","list","i","length","j","checked","push","handleDeleteAllResponse","numberCheckedItem","handleEventMove","event","handleEventResize","openNewEventDialog","action","openExistingEventDialog","getListEventDate","strDate","format","data","listEvents","eventDate","handleNavigate","view","handleOnViewChange","alert","onAddNewClick","startTime","endTime","handleAdminModeChange","handleClick","item","handleSelectAllClick","headerComponentRef","createRef","t","i18n","formats","timeGutterFormat","monthHeaderFormat","dayHeaderFormat","local","start","end","dayRangeHeaderFormat","eventTimeRangeFormat","agendaTimeRangeFormat","name","WORK_WEEK","work_week","month","day","agenda","toolbar","slotDetails","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { Calendar, Views, momentLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport moment from \"moment\";\nimport CalendarHeader from \"./CalendarHeader\";\nimport * as ReactDOM from \"react-dom\";\nimport { Breadcrumb,ConfirmationDialog } from \"egret\";\nimport { getAllEvents, updateEvent,getListEventByWeek,deleteEvent,deleteAllEvent,publishAllEvent,approveAllEvent } from \"./CalendarService\";\nimport EventEditorDialog from \"./EventEditorDialog\";\nimport MyWeek from './MyWeek';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport EventTable from './EventTable'\nimport 'moment/locale/vi';\nimport CrudTable from '../CRUD/CrudTable';\nconst localizer = momentLocalizer(moment);\nmoment.locale('vi', {\n  week: {\n      dow: 1,\n      doy: 1,\n  },\n});\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nlet viewList = Object.keys(Views).map(key => Views[key]);\nconst ViewEventTable = withTranslation()(EventTable);\nclass EgretCalendar extends Component {\n  state = {\n    events: [],\n    shouldShowEventDialog: false,\n    shouldOpenConfirmationDialog:false,\n    shouldDeleteAllConfirmationDialog:false,\n    newEvent: null,\n    culture:\"vi\",\n    date:new Date(),\n    eventDateList:[],\n    selectAllItem:false,\n    askMesssage:'',\n    confirmType:1,\n    isAdminView:true\n  };\n\n  constructor(props) {\n    super(props);\n    this.headerComponentRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.updateCalendar();\n  }\n\n  async updateCalendar(){\n      this.getListEventDate(this.state.date);\n  };\n\n  handleDialogClose = () => {\n    this.setState({selectAllItem:false, shouldShowEventDialog: false, shouldOpenConfirmationDialog:false,shouldDeleteAllConfirmationDialog:false });    \n  };\n  handleDelete = (id) => {\n    this.setState({\n      id:id,\n      askMesssage:'deleteQuestion',\n      shouldOpenConfirmationDialog: true      \n    });\n  };\n  handleApprove = () => {\n    this.setState({\n      confirmType:2,\n      askMesssage:'approveQuestion',\n      shouldOpenConfirmationDialog: true      \n    });\n  };\n  handlePublish = () => {\n    this.setState({\n      confirmType:3,\n      askMesssage:'publishQuestion',\n      shouldOpenConfirmationDialog: true      \n    });\n  };  \n  handleOKClose = () => {\n    this.updateCalendar();\n    this.handleDialogClose();\n  };\n  handleConfirmationResponse = () => {\n    if(this.state.confirmType==1){\n      deleteEvent(this.state.id).then(() => {\n        this.updateCalendar();\n        this.handleDialogClose();\n      }\n      );\n    }else if(this.state.confirmType==2){\n        var list =[];\n        for(var i=0;i<this.state.eventDateList.length;i++){\n          var events =this.state.eventDateList[i].events;\n          for(var j=0;j<events.length;j++){\n            if(events[j].checked !=null && events[j].checked){\n              list.push(events[j]);\n            }\n          }                \n      }\n      approveAllEvent(list).then(() => {\n        this.updateCalendar();\n        this.handleDialogClose();\n      })\n    }else if(this.state.confirmType==3){\n      var list =[];\n      for(var i=0;i<this.state.eventDateList.length;i++){\n        var events =this.state.eventDateList[i].events;\n        for(var j=0;j<events.length;j++){\n          if(events[j].checked !=null && events[j].checked){\n            list.push(events[j]);\n          }\n        }              \n      }\n      publishAllEvent(list).then(() => {\n        this.updateCalendar();\n        this.handleDialogClose();\n      })\n    }\n  }\n\n  handleDeleteAllResponse = () => {\n    var numberCheckedItem =0;\n    var list =[];\n    for(var i=0;i<this.state.eventDateList.length;i++){\n      var events =this.state.eventDateList[i].events;\n      for(var j=0;j<events.length;j++){\n        if(events[j].checked !=null && events[j].checked){\n          numberCheckedItem++;\n          list.push(events[j]);\n        }\n      }\n    }\n    deleteAllEvent(list).then(() => {\n        this.updateCalendar();\n        this.handleDialogClose();\n      }\n    );\n  };\n\n\n  handleEventMove = event => {\n    this.handleEventResize(event);\n  };\n\n  handleEventResize = event => {\n    updateEvent(event).then(() => {\n      this.updateCalendar();\n    });\n  };\n\n  openNewEventDialog = ({ action, ...event }) => {\n    if (action === \"doubleClick\") {\n      this.setState({\n        newEvent: event,\n        shouldShowEventDialog: true\n      });\n    }\n  };\n\n  openExistingEventDialog = event => {\n    this.setState({\n      newEvent: event,\n      shouldShowEventDialog: true\n    });\n  };\n  getListEventDate = (date) => {\n    var strDate = moment(date).format('YYYY-MM-DD');\n    getListEventByWeek(strDate).then(({data})=>{\n      this.setState({eventDateList:data});\n        var listEvents =[];\n        for(var j=0;j<data.length;j++){\n          var eventDate = data[j];\n          for(var i=0;i<eventDate.events.length;i++){\n            eventDate.events[i].checked=false;\n            listEvents.push(eventDate.events[i]);          \n          }\n        }\n        return listEvents;      \n      }).then(listEvents=>{\n        this.setState({events:listEvents}); \n      });\n  };\n  handleNavigate =(date, view)=>{\n    this.setState({date:date},()=>{\n      this.updateCalendar();\n    });\n  }\n  handleOnViewChange  =(view)=>{\n    alert('handleOnViewChange:'+this.state.date);\n  }\n\n  onAddNewClick=(date)=>{\n//    alert(date);\n    this.openNewEventDialog({\n      action: \"doubleClick\",\n      startTime: date,\n      endTime: date\n    })\n  }\n  handleAdminModeChange  =()=>{\n    this.setState({isAdminView:!this.state.isAdminView})\n  }\n  handleClick = (event, item) => {\n    let eventDateList =  this.state.eventDateList;\n    if(item.checked==null){\n      item.checked=true;\n    }else {\n      item.checked=!item.checked;\n    }\n    var selectAllItem=true;\n    for(var i=0;i<eventDateList.length;i++){\n      var events=eventDateList[i].events;\n      for(var j=0;j<events.length;j++){\n        if(events[j].checked==null || events[j].checked==false){\n          selectAllItem=false;\n        }\n        if(events[j].id==item.id){\n          events[j]=item;\n        }\n      }\n    }\n    this.setState({selectAllItem:selectAllItem, eventDateList:eventDateList});\n  };\n\n  handleSelectAllClick = (event) => {\n    let eventDateList =  this.state.eventDateList;\n    for(var i=0;i<eventDateList.length;i++){\n      var events=eventDateList[i].events;\n      for(var j=0;j<events.length;j++){\n        events[j].checked=!this.state.selectAllItem;\n      }\n    }\n    this.setState({selectAllItem:!this.state.selectAllItem, eventDateList:eventDateList});\n  }; \n  render() {\n    let { events, newEvent, shouldShowEventDialog,shouldOpenConfirmationDialog,culture,eventDateList,shouldDeleteAllConfirmationDialog} = this.state;\n    let {t, i18n } = this.props;\n    let formats = {\n      timeGutterFormat: 'HH:mm',\n      monthHeaderFormat: 'MM-YYYY',\n      dayHeaderFormat:({start, end},culture,local)=> 'Ngày :'+ local.format(start, 'DD/MM/YYYY', culture),\n      dayRangeHeaderFormat: ({\n        start,\n        end\n      }, culture, local) =>\n      local.format(start, 'DD/MM/YYYY', culture) + '-' +\n      local.format(end, 'DD/MM/YYYY', culture),\n      eventTimeRangeFormat: ({\n          start,\n          end\n        }, culture, local) =>\n        local.format(start, 'HH:mm', culture) + '-' +\n        local.format(end, 'HH:mm', culture),\n      //dayFormat: 'MM-DD' + ' ' + '星期' + 'dd',\n      agendaTimeRangeFormat: ({\n          start,\n          end\n        }, culture, local) =>\n        local.format(start, 'HH:mm', culture) + '-' +\n        local.format(end, 'HH:mm', culture),\n        //agendaDateFormat: 'MM-DD' + ' ' + '星期' + 'dd',\n  \n    }\n    if(eventDateList==null){\n      eventDateList=[];\n    }\n    \n    return this.state.events && (\n      <div className=\"m-sm-30\">\n        <div  className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: \"Calendar\" }]} />\n        </div>\n\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            this.openNewEventDialog({\n              action: \"doubleClick\",\n              start: new Date(),\n              end: new Date()\n            })\n          }\n        >\n          Add Event\n        </Button>\n\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>this.setState({shouldDeleteAllConfirmationDialog:true})}\n        >\n          {t('Delete')}\n        </Button>\n\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>this.handleApprove()}\n        >\n          {t('Approve')}\n        </Button> \n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>this.handlePublish()}\n        >\n          {t('Publish')}\n        </Button>                         \n        <div>\n          <div ref={this.headerComponentRef} />\n          {/* <CrudTable eventDateList={eventDateList}/> */}\n          <DragAndDropCalendar\n            selectable\n            localizer={localizer}\n            events={this.state.events}\n            onEventDrop={this.handleEventMove}\n            resizable\n            onEventResize={this.handleEventResize}\n            defaultView={Views.WORK_WEEK}\n            defaultDate={new Date()}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            t={t}\n            formats={formats}\n            culture={this.state.culture}\n            //views={viewList}\n            views={{ work_week:EventTable,month: true,week: true, day:true,agenda: true}}\n            step={60}\n            showMultiDayTimes\n            handleDelete = {this.handleDelete}            \n            components={{\n              toolbar: props => {\n                \n                return <CalendarHeader {...props} t={t} handleAdminModeChange={this.handleAdminModeChange} isAdminView ={this.state.isAdminView}/>;\n              }\n            }}\n            selectAllItem={this.state.selectAllItem}\n            eventDateList  ={this.state.eventDateList}\n            onNavigate={this.handleNavigate}\n            onView ={this.handleOnViewChange }\n            handleEventMove = {this.handleEventMove}\n            onSelectEvent={event => {\n              this.openExistingEventDialog(event);\n            }}\n            onSelectSlot={slotDetails => this.openNewEventDialog(slotDetails)}\n            handleOKClose ={this.handleOKClose}\n            style={{minHeight: 800}}\n            handleClick={this.handleClick}\n            handleSelectAllClick={this.handleSelectAllClick}\n            isAdminView ={this.state.isAdminView}\n            onAddNewClick ={this.onAddNewClick}\n          />\n        </div>\n        {shouldShowEventDialog && (\n          <EventEditorDialog\n            handleClose={this.handleDialogClose}\n            open={shouldShowEventDialog}\n            handleOKClose={this.handleOKClose}\n            event={newEvent}\n            t={t}\n          />\n        )}\n        {shouldOpenConfirmationDialog && (\n          <ConfirmationDialog\n            open={shouldOpenConfirmationDialog}\n            onConfirmDialogClose={this.handleDialogClose}\n            onYesClick={this.handleConfirmationResponse}\n            text={t(this.state.askMesssage)}\n          />\n        )}   \n        {shouldDeleteAllConfirmationDialog && (\n          <ConfirmationDialog\n            open={this.state.shouldDeleteAllConfirmationDialog}\n            onConfirmDialogClose={this.handleDialogClose}\n            onYesClick={this.handleDeleteAllResponse}\n            text={t(\"Are you sure to delete all?\")}\n          />\n        )}                   \n      </div>\n    )\n  }\n}\n\nexport default EgretCalendar;\n"]},"metadata":{},"sourceType":"module"}