{"ast":null,"code":"import _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\dashboard\\\\Analytics.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { Grid, Card, Icon, IconButton, Button, Checkbox, Fab, Avatar, Hidden } from \"@material-ui/core\";\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport DashboardWelcomeCard from \"../cards/DashboardWelcomeCard\";\nimport AreaChart from \"../charts/echarts/AreaChart\";\nimport { getDashboardAnalytics } from \"./DashboardService\";\nimport { format } from \"date-fns\";\nimport ModifiedAreaChart from \"./ModifiedAreaChart\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Helmet } from 'react-helmet';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nvar Dashboard1 = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard1, _Component);\n\n  var _super = _createSuper(Dashboard1);\n\n  function Dashboard1() {\n    var _this;\n\n    _classCallCheck(this, Dashboard1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      analytics: {},\n      assetCountByDate: [],\n      allocationVoucherCountByDate: [],\n      transferVoucherCountByDate: [],\n      maintainRequestCountByDate: []\n    };\n\n    _this.updatePageData = function () {\n      getDashboardAnalytics().then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          analytics: data,\n          assetCountByDate: data.assetCountByDate,\n          allocationVoucherCountByDate: data.allocationVoucherCountByDate,\n          transferVoucherCountByDate: data.transferVoucherCountByDate,\n          maintainRequestCountByDate: data.maintainRequestCountByDate\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var theme = this.props.theme;\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var TitlePage = t(\"Dashboard.dashboard\");\n      var _this$state = this.state,\n          analytics = _this$state.analytics,\n          assetCountByDate = _this$state.assetCountByDate,\n          allocationVoucherCountByDate = _this$state.allocationVoucherCountByDate,\n          transferVoucherCountByDate = _this$state.transferVoucherCountByDate,\n          maintainRequestCountByDate = _this$state.maintainRequestCountByDate;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"analytics m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, t(\"Dashboard.dashboard\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"Dashboard.dashboard\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Dashboard1;\n}(Component);\n\nexport default withStyles({}, {\n  withTheme: true\n})(Dashboard1);","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/dashboard/Analytics.jsx"],"names":["React","Component","Fragment","Grid","Card","Icon","IconButton","Button","Checkbox","Fab","Avatar","Hidden","Breadcrumb","SimpleCard","EgretProgressBar","DashboardWelcomeCard","AreaChart","getDashboardAnalytics","format","ModifiedAreaChart","withStyles","Helmet","useTranslation","withTranslation","Trans","Dashboard1","state","analytics","assetCountByDate","allocationVoucherCountByDate","transferVoucherCountByDate","maintainRequestCountByDate","updatePageData","then","data","setState","theme","props","t","i18n","TitlePage","name","withTheme"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  Icon,\n  IconButton,\n  Button,\n  Checkbox,\n  Fab,\n  Avatar,\n  Hidden\n} from \"@material-ui/core\";\n\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport DashboardWelcomeCard from \"../cards/DashboardWelcomeCard\";\nimport AreaChart from \"../charts/echarts/AreaChart\";\nimport { getDashboardAnalytics } from \"./DashboardService\";\nimport { format } from \"date-fns\";\nimport ModifiedAreaChart from \"./ModifiedAreaChart\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Helmet } from 'react-helmet';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nclass Dashboard1 extends Component {\n  state = {\n    analytics: {},\n    assetCountByDate: [],\n    allocationVoucherCountByDate: [],\n    transferVoucherCountByDate: [],\n    maintainRequestCountByDate: []\n  };\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n  updatePageData = () => {\n    getDashboardAnalytics().then(({ data }) => {\n      this.setState({\n        analytics: data,\n        assetCountByDate: data.assetCountByDate,\n        allocationVoucherCountByDate: data.allocationVoucherCountByDate,\n        transferVoucherCountByDate: data.transferVoucherCountByDate,\n        maintainRequestCountByDate: data.maintainRequestCountByDate\n      })\n    });\n  };\n\n  render() {\n    const { theme} = this.props;\n    const { t, i18n } = this.props;\n    let TitlePage = t(\"Dashboard.dashboard\");\n\n    let { analytics, assetCountByDate, allocationVoucherCountByDate, transferVoucherCountByDate, maintainRequestCountByDate } = this.state;\n    return (\n\n      <div className=\"analytics m-sm-30\">\n        <Helmet>\n          <title>{t(\"Dashboard.dashboard\")} | {t(\"web_site\")}</title>\n        </Helmet>\n        <div className=\"mb-sm-30\">\n          <Breadcrumb\n            routeSegments={[\n              { name: t(\"Dashboard.dashboard\") }\n            ]}\n          />\n        </div>\n        <Grid container spacing={3}>\n          <Grid item lg={12} md={12} sm={12} xs={12}>\n            {/* <DashboardWelcomeCard t={t} analytics={analytics} /> */}\n          </Grid>\n\n          <Grid item lg={6} md={6} sm={12} xs={12}>\n            {/* <SimpleCard title={t(\"Dashboard.asset\")}>\n              <ModifiedAreaChart\n                height=\"280px\"\n                option={{\n                  xAxis: {\n                    data: assetCountByDate.map(function (item) {\n                      return new Date(item[\"date\"]).toLocaleDateString();\n                    })\n                  },\n                  series: [\n                    {\n                      data: assetCountByDate.map(function (item) {\n                        return item[\"count\"];\n                      }),\n                      type: \"bar\",\n                      areaStyle: {},\n                      smooth: true,\n                      lineStyle: {\n                        width: 3,\n                        color: theme.palette.primary.main\n                      },\n                      markLine: {\n                        silent: true,\n                        data: [{\n                          yAxis: 50\n                        }, {\n                          yAxis: 100\n                        }, {\n                          yAxis: 150\n                        }, {\n                          yAxis: 200\n                        }, {\n                          yAxis: 300\n                        }]\n                      }\n                    }\n                  ],\n                  yAxis: {\n                    axisLabel: {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  color: [\n                    {\n                      type: \"linear\",\n                      x: 0,\n                      y: 0,\n                      x2: 0,\n                      y2: 1,\n                      colorStops: [\n                        {\n                          offset: 0,\n                          color: theme.palette.primary.light // color at 0% position\n                        },\n                        {\n                          offset: 1,\n                          color: \"rgba(255,255,255,0)\" // color at 100% position\n                        }\n                      ],\n                      global: false // false by default\n                    }\n                  ]\n                }}\n              ></ModifiedAreaChart>\n            </SimpleCard>\n     */}\n    \n    \n          </Grid>\n          <Grid item lg={6} md={6} sm={12} xs={12}>\n            {/* <SimpleCard title= {t('Dashboard.count_of_allocations')} >\n              <ModifiedAreaChart\n                height=\"280px\"\n                option={{\n                  xAxis: {\n                    data: allocationVoucherCountByDate.map(function (item) {\n                      return new Date(item[\"date\"]).toLocaleDateString();\n                    })\n                  },\n                  series: [\n                    {\n                      data: allocationVoucherCountByDate.map(function (item) {\n                        return item[\"count\"];\n                      }),\n                      type: \"line\",\n                      areaStyle: {},\n                      smooth: true,\n                      lineStyle: {\n                        width: 3,\n                        color: theme.palette.primary.main\n                      },\n                      markLine: {\n                        silent: true,\n                        data: [{\n                          yAxis: 50\n                        }, {\n                          yAxis: 100\n                        }, {\n                          yAxis: 150\n                        }, {\n                          yAxis: 200\n                        }, {\n                          yAxis: 300\n                        }]\n                      }\n                    }\n                  ],\n                  yAxis: {\n                    axisLabel: {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  color: [\n                    {\n                      type: \"linear\",\n                      x: 0,\n                      y: 0,\n                      x2: 0,\n                      y2: 1,\n                      colorStops: [\n                        {\n                          offset: 0,\n                          color: theme.palette.primary.light // color at 0% position\n                        },\n                        {\n                          offset: 1,\n                          color: \"rgba(255,255,255,0)\" // color at 100% position\n                        }\n                      ],\n                      global: false // false by default\n                    }\n                  ]\n                }}\n              ></ModifiedAreaChart>\n            </SimpleCard>\n       */}\n          </Grid>\n          <Grid item lg={6} md={6} sm={12} xs={12}>\n            {/* <SimpleCard title={t('Dashboard.count_of_transfer')}>\n              <ModifiedAreaChart\n                height=\"280px\"\n                option={{\n\n                  xAxis: {\n                    data: transferVoucherCountByDate.map(function (item) {\n                      return new Date(item[\"date\"]).toLocaleDateString();\n                    })\n                  },\n                  series: [\n                    {\n                      data: transferVoucherCountByDate.map(function (item) {\n                        return item[\"count\"];\n                      }),\n                      type: \"line\",\n                      areaStyle: {},\n                      smooth: true,\n                      lineStyle: {\n                        width: 3,\n                        color: theme.palette.primary.main\n                      },\n                      markLine: {\n                        silent: true,\n                        data: [{\n                          yAxis: 50\n                        }, {\n                          yAxis: 100\n                        }, {\n                          yAxis: 150\n                        }, {\n                          yAxis: 200\n                        }, {\n                          yAxis: 300\n                        }]\n                      }\n                    }\n                  ],\n                  yAxis: {\n                    axisLabel: {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  color: [\n                    {\n                      type: \"linear\",\n                      x: 0,\n                      y: 0,\n                      x2: 0,\n                      y2: 1,\n                      colorStops: [\n                        {\n                          offset: 0,\n                          color: theme.palette.primary.light // color at 0% position\n                        },\n                        {\n                          offset: 1,\n                          color: \"rgba(255,255,255,0)\" // color at 100% position\n                        }\n                      ],\n                      global: false // false by default\n                    }\n                  ]\n                }}\n              ></ModifiedAreaChart>\n            </SimpleCard>\n       */}\n          </Grid>\n          <Grid item lg={6} md={6} sm={12} xs={12}>\n            {/* <SimpleCard title={t('Dashboard.asset_broken')}>\n              <ModifiedAreaChart\n                height=\"280px\"\n                option={{\n                  xAxis: {\n                    data: maintainRequestCountByDate.map(function (item) {\n                      return new Date(item[\"date\"]).toLocaleDateString();\n                    })\n                  },\n                  series: [\n                    {\n                      data: maintainRequestCountByDate.map(function (item) {\n                        return item[\"count\"];\n                      }),\n                      type: \"line\",\n                      areaStyle: {},\n                      smooth: true,\n                      lineStyle: {\n                        width: 3,\n                        color: theme.palette.primary.main\n                      },\n                      markLine: {\n                        silent: true,\n                        data: [{\n                          yAxis: 50\n                        }, {\n                          yAxis: 100\n                        }, {\n                          yAxis: 150\n                        }, {\n                          yAxis: 200\n                        }, {\n                          yAxis: 300\n                        }]\n                      }\n                    }\n                  ],\n                  yAxis: {\n                    axisLabel: {\n                      color: theme.palette.text.secondary\n                    }\n                  },\n                  color: [\n                    {\n                      type: \"linear\",\n                      x: 0,\n                      y: 0,\n                      x2: 0,\n                      y2: 1,\n                      colorStops: [\n                        {\n                          offset: 0,\n                          color: theme.palette.primary.light // color at 0% position\n                        },\n                        {\n                          offset: 1,\n                          color: \"rgba(255,255,255,0)\" // color at 100% position\n                        }\n                      ],\n                      global: false // false by default\n                    }\n                  ]\n                }}\n              ></ModifiedAreaChart>\n            </SimpleCard>\n       */}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles({}, { withTheme: true })(Dashboard1);\n"]},"metadata":{},"sourceType":"module"}