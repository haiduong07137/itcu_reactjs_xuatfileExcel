{"ast":null,"code":"import _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\egret\\\\components\\\\EgretVerticalNav\\\\EgretVerticalNav.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Icon } from '@material-ui/core';\nimport TouchRipple from '@material-ui/core/ButtonBase';\nimport EgretVerticalNavExpansionPanel from './EgretVerticalNavExpansionPanel';\nimport { withStyles } from '@material-ui/styles';\nimport localStorageService from '../../../app/services/localStorageService';\nimport { role } from '../../../app/role';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nvar ViewEgretVerticalNavExpansionPanel = withTranslation()(EgretVerticalNavExpansionPanel);\n\nvar styles = function styles(theme) {\n  return {\n    expandIcon: {\n      transition: 'transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n      transform: 'rotate(90deg)'\n    },\n    collapseIcon: {\n      transition: 'transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n      transform: 'rotate(0deg)'\n    }\n  };\n};\n\nvar EgretVerticalNav = /*#__PURE__*/function (_Component) {\n  _inherits(EgretVerticalNav, _Component);\n\n  var _super = _createSuper(EgretVerticalNav);\n\n  function EgretVerticalNav() {\n    var _this;\n\n    _classCallCheck(this, EgretVerticalNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      collapsed: true\n    };\n\n    _this.renderLevels = function (data) {\n      var user = localStorageService.getItem('auth_user');\n      var _this$props = _this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          classes = _this$props.classes;\n      return data.map(function (item, index) {\n        var _role$user$role, _role$user$role2;\n\n        if (item.children && user != null && ((_role$user$role = role[user === null || user === void 0 ? void 0 : user.role]) === null || _role$user$role === void 0 ? void 0 : _role$user$role.indexOf(item.name)) >= 0) {\n          return /*#__PURE__*/React.createElement(ViewEgretVerticalNavExpansionPanel, {\n            item: item,\n            key: index,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 11\n            }\n          }, _this.renderLevels(item.children));\n        } else if (user != null && ((_role$user$role2 = role[user === null || user === void 0 ? void 0 : user.role]) === null || _role$user$role2 === void 0 ? void 0 : _role$user$role2.indexOf(item.name)) >= 0) {\n          return /*#__PURE__*/React.createElement(NavLink, {\n            key: index,\n            to: item.path,\n            className: \"nav-item\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(TouchRipple, {\n            key: item.name,\n            name: \"child\",\n            className: \"w-100\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }\n          }, function () {\n            if (item.icon) {\n              return /*#__PURE__*/React.createElement(Icon, {\n                className: \"item-icon text-middle\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }\n              }, item.icon);\n            } else {\n              return /*#__PURE__*/React.createElement(\"span\", {\n                className: \"item-icon icon-text\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }\n              }, item.iconText);\n            }\n          }(), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"text-middle pl-20 item-text\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }\n          }, t(item.name)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"mx-auto\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }\n          }), item.badge && /*#__PURE__*/React.createElement(\"div\", {\n            className: \"badge bg-\".concat(item.badge.color),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }\n          }, item.badge.value)));\n        }\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        collapsed: !_this.state.collapsed\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EgretVerticalNav, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navigation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, this.renderLevels(this.props.navigation));\n    }\n  }]);\n\n  return EgretVerticalNav;\n}(Component);\n\nexport default withStyles(styles)(EgretVerticalNav);","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/egret/components/EgretVerticalNav/EgretVerticalNav.jsx"],"names":["React","Component","NavLink","Icon","TouchRipple","EgretVerticalNavExpansionPanel","withStyles","localStorageService","role","useTranslation","withTranslation","Trans","ViewEgretVerticalNavExpansionPanel","styles","theme","expandIcon","transition","transform","collapseIcon","EgretVerticalNav","state","collapsed","renderLevels","data","user","getItem","props","t","i18n","classes","map","item","index","children","indexOf","name","path","icon","iconText","badge","color","value","handleClick","setState","navigation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Icon } from '@material-ui/core'\nimport TouchRipple from '@material-ui/core/ButtonBase'\nimport EgretVerticalNavExpansionPanel from './EgretVerticalNavExpansionPanel'\nimport { withStyles } from '@material-ui/styles'\nimport localStorageService from '../../../app/services/localStorageService'\nimport { role } from '../../../app/role'\nimport { useTranslation, withTranslation, Trans } from 'react-i18next'\nconst ViewEgretVerticalNavExpansionPanel = withTranslation()(\n  EgretVerticalNavExpansionPanel\n)\nconst styles = (theme) => ({\n  expandIcon: {\n    transition: 'transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n    transform: 'rotate(90deg)',\n  },\n  collapseIcon: {\n    transition: 'transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms',\n    transform: 'rotate(0deg)',\n  },\n})\n\nclass EgretVerticalNav extends Component {\n  state = {\n    collapsed: true,\n  }\n\n  renderLevels = (data) => {\n    let user = localStorageService.getItem('auth_user')\n    const { t, i18n, classes } = this.props\n    return data.map((item, index) => {\n      if (\n        item.children &&\n        user != null &&\n        role[user?.role]?.indexOf(item.name) >= 0\n      ) {\n        return (\n          <ViewEgretVerticalNavExpansionPanel item={item} key={index}>\n            {this.renderLevels(item.children)}\n          </ViewEgretVerticalNavExpansionPanel>\n        )\n      } else if (user != null && role[user?.role]?.indexOf(item.name) >= 0) {\n        return (\n          <NavLink key={index} to={item.path} className=\"nav-item\">\n            <TouchRipple key={item.name} name=\"child\" className=\"w-100\">\n              {(() => {\n                if (item.icon) {\n                  return (\n                    <Icon className=\"item-icon text-middle\">{item.icon}</Icon>\n                  )\n                } else {\n                  return (\n                    <span className=\"item-icon icon-text\">{item.iconText}</span>\n                  )\n                }\n              })()}\n              <span className=\"text-middle pl-20 item-text\">\n                {t(item.name)}\n              </span>\n              <div className=\"mx-auto\"></div>\n              {item.badge && (\n                <div className={`badge bg-${item.badge.color}`}>\n                  {item.badge.value}\n                </div>\n              )}\n            </TouchRipple>\n          </NavLink>\n        )\n      }\n    })\n  }\n\n  handleClick = () => {\n    this.setState({ collapsed: !this.state.collapsed })\n  }\n\n  render() {\n    return (\n      <div className=\"navigation\">\n        {this.renderLevels(this.props.navigation)}\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(EgretVerticalNav)\n"]},"metadata":{},"sourceType":"module"}