{"ast":null,"code":"import _toConsumableArray from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\AdministrativeUnit\\\\AdministrativeUnitTable.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, TableContainer, Button, Card } from \"@material-ui/core\";\nimport { getByPage, deleteAdministrativeUnit } from \"./AdministrativeUnitService\";\nimport AdministrativeUnitEditorDialog from \"./AdministrativeUnitEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport shortid from \"shortid\";\nimport { saveAs } from 'file-saver';\n\nvar AdministrativeUnitTable = /*#__PURE__*/function (_Component) {\n  _inherits(AdministrativeUnitTable, _Component);\n\n  var _super = _createSuper(AdministrativeUnitTable);\n\n  function AdministrativeUnitTable() {\n    var _this;\n\n    _classCallCheck(this, AdministrativeUnitTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      administrativeList: [],\n      item: {},\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleDownload = function () {\n      var blob = new Blob([\"Hello, world!\"], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"hello world.txt\");\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleDeleteAdministrativeUnit = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleEditAdministrativeUnit = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleConfirmationResponse = function () {\n      deleteAdministrativeUnit(_this.state.id).then(function () {\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {}; // searchObject.text = this.state.keyword;\n\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      getByPage(searchObject).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          administrativeList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AdministrativeUnitTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\n      // saveAs(blob, \"hello world.txt\");\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          administrativeList = _this$state.administrativeList,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t('AdministrativeUnit.title')\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.setState({\n            shouldOpenEditorDialog: true,\n            item: {}\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, t('Add')), /*#__PURE__*/React.createElement(TableContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"crud-table\",\n        style: {\n          whiteSpace: \"pre\",\n          minWidth: \"750px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, t('Name')), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, t('Code')), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, t('Status')), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, t('Action')))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, administrativeList.map(function (adminUnit, index) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          key: shortid.generate(),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }\n        }, adminUnit.name), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0\",\n          align: \"left\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }\n        }, adminUnit.code), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }\n        }, adminUnit.isActive ? /*#__PURE__*/React.createElement(\"small\", {\n          className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }\n        }, \"active\") : /*#__PURE__*/React.createElement(\"small\", {\n          className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 27\n          }\n        }, \"inactive\")), /*#__PURE__*/React.createElement(TableCell, {\n          className: \"px-0 border-none\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          onClick: function onClick() {\n            return _this2.handleEditAdministrativeUnit(adminUnit);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          color: \"primary\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }\n        }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n          onClick: function onClick() {\n            return _this2.handleDeleteAdministrativeUnit(adminUnit.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          color: \"error\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }\n        }, \"delete\"))));\n      }))), /*#__PURE__*/React.createElement(TablePagination, {\n        className: \"px-16\",\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: administrativeList.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }), shouldOpenEditorDialog && /*#__PURE__*/React.createElement(AdministrativeUnitEditorDialog, {\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorDialog,\n        item: this.state.item,\n        t: t,\n        i18n: i18n,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"general.confirm\"),\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: \"Are you sure to delete?\",\n        agree: t('general.agree'),\n        cancel: t('general.cancel'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return AdministrativeUnitTable;\n}(Component);\n\nexport default AdministrativeUnitTable;","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/AdministrativeUnit/AdministrativeUnitTable.jsx"],"names":["React","Component","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","TableContainer","Button","Card","getByPage","deleteAdministrativeUnit","AdministrativeUnitEditorDialog","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","shortid","saveAs","AdministrativeUnitTable","state","rowsPerPage","page","administrativeList","item","shouldOpenEditorDialog","shouldOpenConfirmationDialog","setPage","setState","setRowsPerPage","event","target","value","handleChangePage","newPage","handleDownload","blob","Blob","type","handleDialogClose","updatePageData","handleDeleteAdministrativeUnit","id","handleEditAdministrativeUnit","handleConfirmationResponse","then","searchObject","pageIndex","pageSize","data","content","totalElements","props","t","i18n","name","whiteSpace","minWidth","map","adminUnit","index","generate","code","isActive","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination,\n  TableContainer,\n  Button,\n  Card\n} from \"@material-ui/core\";\nimport { getByPage, deleteAdministrativeUnit } from \"./AdministrativeUnitService\";\nimport AdministrativeUnitEditorDialog from \"./AdministrativeUnitEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport shortid from \"shortid\";\nimport { saveAs } from 'file-saver';\nclass AdministrativeUnitTable extends Component {\n  state = {\n    rowsPerPage: 10,\n    page: 0,\n    administrativeList: [],\n    item: {},\n    shouldOpenEditorDialog: false,\n    shouldOpenConfirmationDialog: false\n  };\n\n  setPage = page => {\n    this.setState({ page });\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n  handleDownload = () => {\n    var blob = new Blob([\"Hello, world!\"], { type: \"text/plain;charset=utf-8\" });\n    saveAs(blob, \"hello world.txt\");\n  }\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    });\n    this.updatePageData();\n  };\n\n  handleDeleteAdministrativeUnit = id => {\n    this.setState({\n      id,\n      shouldOpenConfirmationDialog: true\n    });\n  };\n\n  handleEditAdministrativeUnit = item => {\n    this.setState({\n      item: item,\n      shouldOpenEditorDialog: true\n    });\n  };\n\n  handleConfirmationResponse = () => {\n    deleteAdministrativeUnit(this.state.id).then(() => {\n      this.handleDialogClose();\n    });\n  };\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  updatePageData = () => {\n    var searchObject = {};\n    // searchObject.text = this.state.keyword;\n    searchObject.pageIndex = this.state.page + 1;\n    searchObject.pageSize = this.state.rowsPerPage;\n    getByPage(searchObject).then(({ data }) => {\n      this.setState({\n        administrativeList: [...data.content], totalElements: data.totalElements\n      });\n    }\n    );\n  };\n\n  render() {\n    // var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\n    // saveAs(blob, \"hello world.txt\");\n    const { t, i18n } = this.props;\n    let {\n      rowsPerPage,\n      page,\n      administrativeList,\n      shouldOpenConfirmationDialog,\n      shouldOpenEditorDialog\n    } = this.state;\n    return (\n      <div className=\"m-sm-30\">\n\n        <div className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: t('AdministrativeUnit.title') }]} />\n        </div>\n\n        <Button\n          className=\"mb-16 mr-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.setState({ shouldOpenEditorDialog: true, item: {} })}\n        >\n          {t('Add')}\n        </Button>\n        <TableContainer>\n          <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", minWidth: \"750px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell>{t('Name')}</TableCell>\n                <TableCell>{t('Code')}</TableCell>\n                {/* <TableCell>Level</TableCell> */}\n                <TableCell>{t('Status')}</TableCell>\n                <TableCell>{t('Action')}</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {administrativeList\n                .map((adminUnit, index) => (\n                  <TableRow key={shortid.generate()}>\n                    <TableCell className=\"px-0\">{adminUnit.name}</TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {adminUnit.code}\n                    </TableCell>\n\n                    {/* <TableCell className=\"px-0\" align=\"left\">\n                      {adminUnit.level}\n                    </TableCell> */}\n                    <TableCell className=\"px-0\">\n                      {adminUnit.isActive ? (\n                        <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\n                          active\n                        </small>\n                      ) : (\n                          <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\n                            inactive\n                          </small>\n                        )}\n                    </TableCell>\n                    <TableCell className=\"px-0 border-none\">\n                      <IconButton\n                        onClick={() =>\n                          this.handleEditAdministrativeUnit(adminUnit)\n                        }\n                      >\n                        <Icon color=\"primary\">edit</Icon>\n                      </IconButton>\n                      <IconButton onClick={() => this.handleDeleteAdministrativeUnit(adminUnit.id)}>\n                        <Icon color=\"error\">delete</Icon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n\n          <TablePagination\n            className=\"px-16\"\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={administrativeList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.setRowsPerPage}\n          />\n\n          {shouldOpenEditorDialog && (\n            <AdministrativeUnitEditorDialog\n              handleClose={this.handleDialogClose}\n              open={shouldOpenEditorDialog}\n              item={this.state.item}\n              t={t} i18n={i18n}\n            />\n          )}\n          {shouldOpenConfirmationDialog && (\n            <ConfirmationDialog\n              title={t(\"general.confirm\")}\n              open={shouldOpenConfirmationDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponse}\n              text=\"Are you sure to delete?\"\n              agree={t('general.agree')}\n              cancel={t('general.cancel')}\n            />\n          )}\n        </TableContainer>\n      </div>\n    );\n  }\n}\n\nexport default AdministrativeUnitTable;\n"]},"metadata":{},"sourceType":"module"}