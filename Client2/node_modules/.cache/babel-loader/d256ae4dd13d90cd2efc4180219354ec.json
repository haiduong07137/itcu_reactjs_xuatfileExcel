{"ast":null,"code":"import _objectSpread from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\gocBaitap\\\\ETan\\\\ICTUedu\\\\Client2\\\\src\\\\app\\\\views\\\\Component\\\\UploadFormPopup\\\\UploadFormPopup.jsx\";\nimport { Fab, Icon, Card, Grid, Divider, Button, DialogActions, Dialog } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { Breadcrumb, SimpleCard, EgretProgressBar, ShowDialog } from \"egret\";\nimport axios from \"axios\";\nimport ConstantList from \"../../../appConfig\";\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar UploadFormPopup = /*#__PURE__*/function (_React$Component) {\n  _inherits(UploadFormPopup, _React$Component);\n\n  var _super = _createSuper(UploadFormPopup);\n\n  function UploadFormPopup() {\n    var _this;\n\n    _classCallCheck(this, UploadFormPopup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dragClass: \"\",\n      files: [],\n      statusList: [],\n      queProgress: 0,\n      uploadingAllFiles: false,\n      shouldOpenShowStatusDialog: false,\n      userList: []\n    };\n\n    _this.handleFileUploadOnSelect = function (event) {\n      var files = event.target.files;\n\n      _this.fileUpload(files[0]).then(function (res) {\n        alert(\"File uploaded successfully.\");\n      });\n    };\n\n    _this.handleFileSelect = function (event) {\n      var t = _this.props.t;\n      var files = event.target.files;\n      var list = [];\n\n      var acceptType = _this.props.acceptType.split(\";\");\n\n      var _iterator = _createForOfIteratorHelper(files),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var iterator = _step.value;\n          var extentions = iterator.name.split(\".\");\n\n          if (extentions.length > 0 && acceptType.indexOf(extentions[extentions.length - 1]) < 0) {\n            alert(t(\"general.type_not_accepted\"));\n            break;\n          } // if (iterator.type.split(\"/\").length <= 0 || acceptType.indexOf(iterator.type.split(\"/\")[1]) < 0) {\n          //   console.log(acceptType);\n          //   console.log(iterator.type.split(\"/\"));\n          //   alert(t(\"general.type_not_accepted\"));\n          //   break;\n          // }\n\n\n          list.push({\n            file: iterator,\n            uploading: false,\n            error: false,\n            progress: 0\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      _this.setState({\n        files: [].concat(list)\n      });\n    };\n\n    _this.handleDragOver = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleDrop = function (event) {\n      event.preventDefault();\n      event.persist();\n      var t = _this.props.t;\n      var files = event.dataTransfer.files;\n      var list = [];\n\n      var acceptType = _this.props.acceptType.split(\";\");\n\n      var _iterator2 = _createForOfIteratorHelper(files),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var iterator = _step2.value;\n\n          if (iterator.type.split(\"/\").length <= 0 || acceptType.indexOf(iterator.type.split(\"/\")[1]) < 0) {\n            console.log(acceptType);\n            console.log(iterator.type.split(\"/\"));\n            alert(t(\"general.type_not_accepted\"));\n            break;\n          }\n\n          list.push({\n            file: iterator,\n            uploading: false,\n            error: false,\n            progress: 0\n          });\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      _this.setState({\n        dragClass: \"\",\n        files: [].concat(list)\n      });\n\n      return false;\n    };\n\n    _this.handleDragStart = function (event) {\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenShowStatusDialog: false\n      });\n\n      _this.props.handleClose();\n    };\n\n    _this.handleSingleRemove = function (index) {\n      var files = _toConsumableArray(_this.state.files);\n\n      files.splice(index, 1);\n\n      _this.setState({\n        files: _toConsumableArray(files)\n      });\n    };\n\n    _this.handleAllRemove = function () {\n      _this.setState({\n        files: []\n      });\n    };\n\n    _this.uploadSingleFile = function (index) {\n      var t = _this.props.t;\n\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n\n      _this.fileUpload(file.file).then(function (res) {\n        alert(t(\"general.success\")); // window.location.reload();\n      });\n\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: true,\n        error: false\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.uploadAllFile = function () {\n      var allFiles = [];\n      var t = _this.props.t;\n\n      _this.state.files.map(function (item) {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: true,\n          error: false\n        }));\n        return item;\n      });\n\n      var files = allFiles.map(function (file) {\n        return file.file;\n      });\n\n      _this.setState({\n        uploadingAllFiles: true\n      }, function () {\n        var _this2 = this;\n\n        this.multipleFilesUpload(files).then(function (res) {\n          if (res.data.status === \"FAILED\") {\n            _this2.state.description = res.data.logDetail;\n\n            _this2.setState({\n              shouldOpenShowStatusDialog: true\n            });\n\n            return;\n          }\n\n          alert(t('general.success'));\n          window.location.reload();\n        }).catch(function (err) {\n          alert(t('general.error'));\n\n          _this2.props.handleClose();\n\n          _this2.setState({\n            uploadingAllFiles: false\n          });\n        });\n      });\n\n      _this.setState({\n        files: [].concat(allFiles),\n        queProgress: 35\n      });\n    };\n\n    _this.handleSingleCancel = function (index) {\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: false,\n        error: true\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.handleCancelAll = function () {\n      var allFiles = [];\n\n      _this.state.files.map(function (item) {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: false,\n          error: true\n        }));\n        return item;\n      });\n\n      _this.setState({\n        files: [].concat(allFiles),\n        queProgress: 0\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadFormPopup, [{\n    key: \"fileUpload\",\n    value: function fileUpload(file) {\n      var url = this.props.uploadUrl;\n      var formData = new FormData();\n      formData.append('uploadfile', file); //Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n\n      var config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      return axios.post(url, formData, config);\n    }\n  }, {\n    key: \"multipleFilesUpload\",\n    value: function multipleFilesUpload(files) {\n      var url = this.props.uploadUrl;\n      var formData = new FormData();\n\n      var _iterator3 = _createForOfIteratorHelper(files),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var file = _step3.value;\n          formData.append('uploadfiles', file); //Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      var config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      return axios.post(url, formData, config);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          handleClose = _this$props.handleClose,\n          handleSelect = _this$props.handleSelect,\n          selectedItem = _this$props.selectedItem,\n          open = _this$props.open;\n      var _this$state = this.state,\n          dragClass = _this$state.dragClass,\n          files = _this$state.files,\n          queProgress = _this$state.queProgress,\n          shouldOpenShowStatusDialog = _this$state.shouldOpenShowStatusDialog;\n      var isEmpty = files.length === 0;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: 'md',\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }\n      }, t(\"general.upload\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"upload-form m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-wrap mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"upload-single-file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        className: \"capitalize\",\n        component: \"span\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: this.state.uploadingAllFiles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"pr-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      }, t('general.select_file'))))), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"display-none\",\n        onChange: this.handleFileSelect,\n        id: \"upload-single-file\",\n        type: \"file\",\n        multiple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(dragClass, \" upload-drop-box flex flex-center flex-middle\"),\n        onDragEnter: this.handleDragStart,\n        onDragOver: this.handleDragOver,\n        onDrop: this.handleDrop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }\n      }, isEmpty ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, \"Drop your files here\") : /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 19\n        }\n      }, files.length, \" file\", files.length > 1 ? \"s\" : \"\", \" selected...\")), /*#__PURE__*/React.createElement(Card, {\n        className: \"mb-24\",\n        elevation: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"center\",\n        alignItems: \"center\",\n        direction: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 19\n        }\n      }, t('general.file_name')), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 19\n        }\n      }, t('general.size')), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 19\n        }\n      }, t('general.action')))), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }\n      }), isEmpty && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"px-16 center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 27\n        }\n      }, t('general.empty_file')), files.map(function (item, index) {\n        var file = item.file,\n            uploading = item.uploading,\n            error = item.error,\n            progress = item.progress;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"px-16 py-16\",\n          key: file.name,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          justify: \"center\",\n          alignItems: \"center\",\n          direction: \"row\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 4,\n          md: 4,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 23\n          }\n        }, file.name), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 1,\n          md: 1,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 23\n          }\n        }, (file.size / 1024 / 1024).toFixed(1), \" MB\"), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 2,\n          md: 2,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(EgretProgressBar, {\n          value: progress,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 1,\n          md: 1,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 23\n          }\n        }, error && /*#__PURE__*/React.createElement(Icon, {\n          color: \"error\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 35\n          }\n        }, \"error\")), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 4,\n          md: 4,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flex\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          className: \"bg-error\",\n          disabled: _this3.state.uploadingAllFiles,\n          onClick: function onClick() {\n            return _this3.handleSingleRemove(index);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 27\n          }\n        }, t('general.remove'))))));\n      }))), shouldOpenShowStatusDialog && /*#__PURE__*/React.createElement(ShowDialog, {\n        title: \"Error\",\n        open: shouldOpenShowStatusDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        text: this.state.description,\n        cancel: 'OK',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-36 align-bottom\",\n        variant: \"contained\",\n        color: \"secondary\",\n        disabled: this.state.uploadingAllFiles,\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }\n      }, t('general.close')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-36 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: this.state.uploadingAllFiles,\n        onClick: this.uploadAllFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }\n      }, t('general.upload'))));\n    }\n  }]);\n\n  return UploadFormPopup;\n}(React.Component);\n\nexport default UploadFormPopup;","map":{"version":3,"sources":["D:/gocBaitap/ETan/ICTUedu/Client2/src/app/views/Component/UploadFormPopup/UploadFormPopup.jsx"],"names":["Fab","Icon","Card","Grid","Divider","Button","DialogActions","Dialog","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","DateFnsUtils","ValidatorForm","TextValidator","DialogContent","DialogTitle","Input","InputLabel","MenuItem","FormControl","Select","Draggable","Paper","Breadcrumb","SimpleCard","EgretProgressBar","ShowDialog","axios","ConstantList","PaperComponent","props","UploadFormPopup","state","dragClass","files","statusList","queProgress","uploadingAllFiles","shouldOpenShowStatusDialog","userList","handleFileUploadOnSelect","event","target","fileUpload","then","res","alert","handleFileSelect","t","list","acceptType","split","iterator","extentions","name","length","indexOf","push","file","uploading","error","progress","setState","handleDragOver","preventDefault","handleDrop","persist","dataTransfer","type","console","log","handleDragStart","handleDialogClose","handleClose","handleSingleRemove","index","splice","handleAllRemove","uploadSingleFile","allFiles","uploadAllFile","map","item","multipleFilesUpload","data","status","description","logDetail","window","location","reload","catch","err","handleSingleCancel","handleCancelAll","url","uploadUrl","formData","FormData","append","config","headers","post","i18n","handleSelect","selectedItem","open","isEmpty","cursor","size","toFixed"],"mappings":"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","sourcesContent":["import { Fab, Icon, Card, Grid, Divider, Button, DialogActions, Dialog } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Breadcrumb, SimpleCard, EgretProgressBar, ShowDialog } from \"egret\";\r\nimport axios from \"axios\";\r\nimport ConstantList from \"../../../appConfig\";\r\n\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass UploadFormPopup extends React.Component {\r\n  state = {\r\n    dragClass: \"\",\r\n    files: [],\r\n    statusList: [],\r\n    queProgress: 0,\r\n    uploadingAllFiles: false, shouldOpenShowStatusDialog: false, userList: [],\r\n  };\r\n  handleFileUploadOnSelect = event => {\r\n    let files = event.target.files;\r\n    this.fileUpload(files[0]).then(res => {\r\n      alert(\"File uploaded successfully.\")\r\n    });\r\n  }\r\n\r\n  handleFileSelect = event => {\r\n    let { t } = this.props;\r\n    let files = event.target.files;\r\n    let list = [];\r\n    let acceptType = this.props.acceptType.split(\";\");\r\n    for (const iterator of files) {\r\n      let extentions = iterator.name.split(\".\");\r\n      if (extentions.length > 0 && acceptType.indexOf(extentions[extentions.length - 1]) < 0) {\r\n        alert(t(\"general.type_not_accepted\"));\r\n        break;\r\n      }\r\n      // if (iterator.type.split(\"/\").length <= 0 || acceptType.indexOf(iterator.type.split(\"/\")[1]) < 0) {\r\n      //   console.log(acceptType);\r\n      //   console.log(iterator.type.split(\"/\"));\r\n      //   alert(t(\"general.type_not_accepted\"));\r\n      //   break;\r\n      // }\r\n      list.push({\r\n        file: iterator,\r\n        uploading: false,\r\n        error: false,\r\n        progress: 0\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      files: [...list]\r\n    });\r\n  };\r\n\r\n  handleDragOver = event => {\r\n    event.preventDefault();\r\n    this.setState({ dragClass: \"drag-shadow\" });\r\n  };\r\n\r\n  handleDrop = event => {\r\n    event.preventDefault();\r\n    event.persist();\r\n    let { t } = this.props;\r\n    let files = event.dataTransfer.files;\r\n    let list = [];\r\n    let acceptType = this.props.acceptType.split(\";\");\r\n    for (const iterator of files) {\r\n      if (iterator.type.split(\"/\").length <= 0 || acceptType.indexOf(iterator.type.split(\"/\")[1]) < 0) {\r\n        console.log(acceptType);\r\n        console.log(iterator.type.split(\"/\"));\r\n        alert(t(\"general.type_not_accepted\"));\r\n        break;\r\n      }\r\n      list.push({\r\n        file: iterator,\r\n        uploading: false,\r\n        error: false,\r\n        progress: 0\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      dragClass: \"\",\r\n      files: [...list]\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  handleDragStart = event => {\r\n    this.setState({ dragClass: \"drag-shadow\" });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenShowStatusDialog: false,\r\n    })\r\n    this.props.handleClose()\r\n  }\r\n\r\n\r\n  handleSingleRemove = index => {\r\n    let files = [...this.state.files];\r\n    files.splice(index, 1);\r\n    this.setState({\r\n      files: [...files]\r\n    });\r\n  };\r\n\r\n  handleAllRemove = () => {\r\n    this.setState({ files: [] });\r\n  };\r\n\r\n  fileUpload(file) {\r\n    const url = this.props.uploadUrl;\r\n    let formData = new FormData();\r\n    formData.append('uploadfile', file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n    return axios.post(url, formData, config)\r\n  }\r\n\r\n  multipleFilesUpload(files) {\r\n    const url = this.props.uploadUrl;\r\n    let formData = new FormData();\r\n    for (let file of files) {\r\n      formData.append('uploadfiles', file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\r\n    }\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n    return axios.post(url, formData, config)\r\n  }\r\n\r\n  uploadSingleFile = index => {\r\n    let { t } = this.props;\r\n    let allFiles = [...this.state.files];\r\n    let file = this.state.files[index];\r\n    this.fileUpload(file.file).then(res => {\r\n\r\n      alert(t(\"general.success\"))\r\n      // window.location.reload();\r\n    })\r\n\r\n    allFiles[index] = { ...file, uploading: true, error: false };\r\n\r\n    this.setState({\r\n      files: [...allFiles]\r\n    });\r\n  };\r\n\r\n  uploadAllFile = () => {\r\n    let allFiles = [];\r\n    let { t } = this.props;\r\n\r\n    this.state.files.map(item => {\r\n      allFiles.push({\r\n        ...item,\r\n        uploading: true,\r\n        error: false\r\n      });\r\n\r\n      return item;\r\n    });\r\n    const files = allFiles.map(file => file.file)\r\n    this.setState({\r\n      uploadingAllFiles: true\r\n    }, function () {\r\n      this.multipleFilesUpload(files).then(res => {\r\n        if (res.data.status === \"FAILED\") { \r\n          this.state.description = res.data.logDetail;\r\n          this.setState({\r\n            shouldOpenShowStatusDialog: true\r\n          })\r\n          return;\r\n        }\r\n        alert(t('general.success'))\r\n        window.location.reload();\r\n      }).catch(err => {\r\n        alert(t('general.error'))\r\n        this.props.handleClose()\r\n        this.setState({\r\n          uploadingAllFiles: false\r\n        })\r\n      })\r\n    });\r\n\r\n\r\n    this.setState({\r\n      files: [...allFiles],\r\n      queProgress: 35\r\n    });\r\n  };\r\n\r\n  handleSingleCancel = index => {\r\n    let allFiles = [...this.state.files];\r\n    let file = this.state.files[index];\r\n\r\n    allFiles[index] = { ...file, uploading: false, error: true };\r\n\r\n    this.setState({\r\n      files: [...allFiles]\r\n    });\r\n  };\r\n\r\n  handleCancelAll = () => {\r\n    let allFiles = [];\r\n\r\n    this.state.files.map(item => {\r\n      allFiles.push({\r\n        ...item,\r\n        uploading: false,\r\n        error: true\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    this.setState({\r\n      files: [...allFiles],\r\n      queProgress: 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { t, i18n, handleClose, handleSelect, selectedItem, open } = this.props;\r\n    let { dragClass, files, queProgress, shouldOpenShowStatusDialog } = this.state;\r\n    let isEmpty = files.length === 0;\r\n\r\n    return (\r\n      <Dialog onClose={handleClose} open={open} PaperComponent={PaperComponent} maxWidth={'md'} fullWidth>\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20\">{t(\"general.upload\")}</span>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"upload-form m-sm-30\">\r\n            <div className=\"flex flex-wrap mb-20\">\r\n              <label htmlFor=\"upload-single-file\">\r\n                <Button\r\n                  size=\"small\"\r\n                  className=\"capitalize\"\r\n                  component=\"span\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={this.state.uploadingAllFiles}\r\n                >\r\n                  <div className=\"flex flex-middle\">\r\n                    <Icon className=\"pr-8\">cloud_upload</Icon>\r\n                    <span>{t('general.select_file')}</span>\r\n                  </div>\r\n                </Button>\r\n              </label>\r\n              <input\r\n                className=\"display-none\"\r\n                onChange={this.handleFileSelect}\r\n                id=\"upload-single-file\"\r\n                type=\"file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div\r\n              className={`${dragClass} upload-drop-box flex flex-center flex-middle`}\r\n              onDragEnter={this.handleDragStart}\r\n              onDragOver={this.handleDragOver}\r\n              onDrop={this.handleDrop}\r\n            >\r\n              {isEmpty ? (\r\n                <span>Drop your files here</span>\r\n              ) : (\r\n                  <h5 className=\"m-0\">\r\n                    {files.length} file{files.length > 1 ? \"s\" : \"\"} selected...\r\n                  </h5>\r\n                )}\r\n            </div>\r\n            <Card className=\"mb-24\" elevation={2}>\r\n              <div className=\"p-16\">\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  direction=\"row\"\r\n                >\r\n                  <Grid item lg={4} md={4}>\r\n                    {t('general.file_name')}\r\n                  </Grid>\r\n                  <Grid item lg={4} md={4}>\r\n                    {t('general.size')}\r\n                  </Grid>\r\n                  <Grid item lg={4} md={4}>\r\n                    {t('general.action')}\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <Divider></Divider>\r\n\r\n              {isEmpty && <p className=\"px-16 center\">{t('general.empty_file')}</p>}\r\n\r\n              {files.map((item, index) => {\r\n                let { file, uploading, error, progress } = item;\r\n                return (\r\n                  <div className=\"px-16 py-16\" key={file.name}>\r\n                    <Grid\r\n                      container\r\n                      spacing={2}\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      direction=\"row\"\r\n                    >\r\n                      <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                        {file.name}\r\n                      </Grid>\r\n                      <Grid item lg={1} md={1} sm={12} xs={12}>\r\n                        {(file.size / 1024 / 1024).toFixed(1)} MB\r\n                    </Grid>\r\n                      <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                        <EgretProgressBar value={progress}></EgretProgressBar>\r\n                      </Grid>\r\n                      <Grid item lg={1} md={1} sm={12} xs={12}>\r\n                        {error && <Icon color=\"error\">error</Icon>}\r\n                        {/* {uploading && <Icon className=\"text-green\">done</Icon>} */}\r\n                      </Grid>\r\n                      <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                        <div className=\"flex\">\r\n                          {/* <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={uploading}\r\n                            onClick={() => this.uploadSingleFile(index)}\r\n                          >\r\n                            {t('general.upload')}\r\n                          </Button> */}\r\n                          {/* <Button\r\n                            className=\"mx-8\"\r\n                            variant=\"contained\"\r\n                            disabled={!uploading}\r\n                            color=\"secondary\"\r\n                            onClick={() => this.handleSingleCancel(index)}\r\n                          >\r\n                            {t('general.cancel')}\r\n                          </Button> */}\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            className=\"bg-error\"\r\n                            disabled={this.state.uploadingAllFiles}\r\n                            onClick={() => this.handleSingleRemove(index)}\r\n                          >\r\n                            {t('general.remove')}\r\n                          </Button>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Card>\r\n          </div>\r\n          {shouldOpenShowStatusDialog && (\r\n            <ShowDialog\r\n              title=\"Error\"\r\n              open={shouldOpenShowStatusDialog}\r\n              onConfirmDialogClose={this.handleDialogClose}\r\n              text={this.state.description}\r\n              cancel={'OK'}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            className=\"mb-16 mr-36 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            disabled={this.state.uploadingAllFiles}\r\n            onClick={() => handleClose()}>{t('general.close')}\r\n          </Button>\r\n          <Button\r\n            className=\"mb-16 mr-36 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={this.state.uploadingAllFiles}\r\n            onClick={this.uploadAllFile}>{t('general.upload')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default UploadFormPopup;"]},"metadata":{},"sourceType":"module"}